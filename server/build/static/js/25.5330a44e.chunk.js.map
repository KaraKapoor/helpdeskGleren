{"version":3,"sources":["app/views/dashboard/shared/Doughnut.jsx","app/views/dashboard/shared/RowCards.jsx","app/views/dashboard/shared/StatCards.jsx","app/views/dashboard/shared/StatCards2.jsx","app/views/dashboard/shared/TopSellingTable.jsx","app/views/dashboard/shared/UpgradeCard.jsx","app/views/dashboard/Analytics.jsx"],"names":["DoughnutChart","height","color","toDoTicketCount","inProgressTicketsCount","theme","useTheme","option","legend","show","itemGap","icon","bottom","textStyle","palette","text","secondary","fontSize","fontFamily","tooltip","trigger","formatter","xAxis","axisLine","splitLine","yAxis","series","name","type","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","position","emphasis","fontWeight","labelLine","data","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","style","styled","Span","marginLeft","breakpoints","down","Fab","boxShadow","background","backgroundColor","error","main","Avatar","width","StyledCard","Card","display","flexWrap","alignItems","justifyContent","padding","paper","ContentBox","Box","opacity","primary","Heading","margin","marginTop","StatCards","cardList","assignedTicketsCount","assignedBlockerTicketCount","resolvedTicketCount","reviewedTicketCount","testedTicketCount","totalTicketCreatedCount","Grid","container","spacing","sx","mb","map","item","index","xs","md","elevation","Icon","className","ml","to","Tooltip","title","placement","IconButton","textcolor","flexGrow","overflow","borderRadius","paddingLeft","paddingRight","marginBottom","textTransform","Table","minWidth","whiteSpace","borderBottom","bgcolor","CardRoot","textAlign","convertHexToRGB","Paragraph","paddingTop","paddingBottom","UpgradeCard","url","Strings","GLEREN_WEBSITE","concat","GLEREN_CONTACT_US_PATH","src","alt","Button","size","variant","onClick","window","open","Title","marginRight","Analytics","useSearchParams","searchdata","get","useState","dashboardData","setDashboardData","useEffect","fetchDashboardData","getProfilePic","getDashboardData","then","response","lg","sm","px","py","Doughnut","dark"],"mappings":"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","file":"static/js/25.5330a44e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useTheme } from '@mui/system'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nconst DoughnutChart = ({ height, color = [], toDoTicketCount, inProgressTicketsCount }) => {\r\n    const theme = useTheme()\r\n\r\n    const option = {\r\n        legend: {\r\n            show: true,\r\n            itemGap: 20,\r\n            icon: 'circle',\r\n            bottom: 0,\r\n            textStyle: {\r\n                color: theme.palette.text.secondary,\r\n                fontSize: 13,\r\n                fontFamily: 'roboto',\r\n            },\r\n        },\r\n        tooltip: {\r\n            show: false,\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n        },\r\n        xAxis: [\r\n            {\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n        ],\r\n        yAxis: [\r\n            {\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n        ],\r\n\r\n        series: [\r\n            {\r\n                name: 'Tickets',\r\n                type: 'pie',\r\n                radius: ['45%', '72.55%'],\r\n                center: ['50%', '50%'],\r\n                avoidLabelOverlap: false,\r\n                hoverOffset: 5,\r\n                stillShowZeroSum: false,\r\n                label: {\r\n                    normal: {\r\n                        show: false,\r\n                        position: 'center', // shows the description data to center, turn off to show in right side\r\n                        textStyle: {\r\n                            color: theme.palette.text.secondary,\r\n                            fontSize: 13,\r\n                            fontFamily: 'roboto',\r\n                        },\r\n                        formatter: '{a}',\r\n                    },\r\n                    emphasis: {\r\n                        show: true,\r\n                        textStyle: {\r\n                            fontSize: '14',\r\n                            fontWeight: 'normal',\r\n                            // color: \"rgba(15, 21, 77, 1)\"\r\n                        },\r\n                        formatter: '{b} \\n{c} ({d}%)',\r\n                    },\r\n                },\r\n                labelLine: {\r\n                    normal: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                data: [\r\n                    {\r\n                        value: toDoTicketCount > 0 ? toDoTicketCount : 100,\r\n                        name: 'To-Do',\r\n                    },\r\n                    {\r\n                        value: inProgressTicketsCount,\r\n                        name: 'In-Progress',\r\n                    },\r\n                ],\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    }\r\n\r\n    return (\r\n        <ReactEcharts\r\n            style={{ height: height }}\r\n            option={{\r\n                ...option,\r\n                color: [...color],\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DoughnutChart\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Fab,\r\n  Grid,\r\n  Hidden,\r\n  Icon,\r\n  IconButton,\r\n  styled,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { Span } from 'app/components/Typography';\r\nimport { format } from 'date-fns';\r\nimport { Fragment } from 'react';\r\n\r\nconst ProjectName = styled(Span)(({ theme }) => ({\r\n  marginLeft: 24,\r\n  fontWeight: '500',\r\n  [theme.breakpoints.down('sm')]: { marginLeft: 4 },\r\n}));\r\n\r\nconst StarOutline = styled(Fab)(() => ({\r\n  marginLeft: 0,\r\n  boxShadow: 'none',\r\n  background: '#08ad6c !important',\r\n  backgroundColor: 'rgba(9, 182, 109, 1) !important',\r\n}));\r\n\r\nconst DateRange = styled(Fab)(({ theme }) => ({\r\n  marginLeft: 0,\r\n  boxShadow: 'none',\r\n  color: 'white !important',\r\n  background: `${theme.palette.error.main} !important`,\r\n}));\r\n\r\nconst StyledAvatar = styled(Avatar)(() => ({\r\n  width: '32px !important',\r\n  height: '32px !important',\r\n}));\r\n\r\nconst RowCards = () => {\r\n  const { palette } = useTheme();\r\n  const textMuted = palette.text.secondary;\r\n\r\n  return [1, 2, 3, 4].map((id) => (\r\n    <Fragment key={id}>\r\n      <Card sx={{ py: 1, px: 2 }} className=\"project-card\">\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item md={5} xs={7}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Checkbox />\r\n              <Hidden smDown>\r\n                {id % 2 === 1 ? (\r\n                  <StarOutline size=\"small\">\r\n                    <Icon>star_outline</Icon>\r\n                  </StarOutline>\r\n                ) : (\r\n                  <DateRange size=\"small\">\r\n                    <Icon>date_range</Icon>\r\n                  </DateRange>\r\n                )}\r\n              </Hidden>\r\n              <ProjectName>Project {id}</ProjectName>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item md={3} xs={4}>\r\n            <Box color={textMuted}>{format(new Date().getTime(), 'MM/dd/yyyy hh:mma')}</Box>\r\n          </Grid>\r\n\r\n          <Hidden smDown>\r\n            <Grid item xs={3}>\r\n              <Box display=\"flex\" position=\"relative\" marginLeft=\"-0.875rem !important\">\r\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\r\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\r\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\r\n                <StyledAvatar sx={{ fontSize: '14px' }}>+3</StyledAvatar>\r\n              </Box>\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Grid item xs={1}>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              <IconButton>\r\n                <Icon>more_vert</Icon>\r\n              </IconButton>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Box py={1} />\r\n    </Fragment>\r\n  ));\r\n};\r\n\r\nexport default RowCards;\r\n","import { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\r\nimport { Small } from 'app/components/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '24px !important',\r\n  background: theme.palette.background.paper,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  '& small': { color: theme.palette.text.secondary },\r\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\r\n}));\r\n\r\nconst Heading = styled('h6')(({ theme }) => ({\r\n  margin: 0,\r\n  marginTop: '4px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst StatCards = ({ data }) => {\r\n  const cardList = [\r\n    { name: `Assigned Tickets`, value: data?.assignedTicketsCount, icon: 'assignment' },\r\n    { name: `Blocker/Critical Tickets Assigned`, value: data?.assignedBlockerTicketCount, icon: 'block' },\r\n    { name: `Tickets Resolved By Me`, value: data?.resolvedTicketCount, icon: 'work' },\r\n    { name: `Tickets Reviewed By Me`, value: data?.reviewedTicketCount, icon: 'rate_review' },\r\n    { name: `Tickets Tested By Me`, value: data?.testedTicketCount, icon: 'bug_report' },\r\n    { name: `Tickets Created By Me`, value: data?.totalTicketCreatedCount, icon: 'create' },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={3} sx={{ mb: '24px' }}>\r\n      {cardList.map((item, index) => (\r\n        <Grid item xs={12} md={6} key={index}>\r\n          <StyledCard elevation={6}>\r\n            <ContentBox>\r\n              <Icon className=\"icon\">{item.icon}</Icon>\r\n              <Box ml=\"12px\">\r\n                <Small>{item.name}</Small>\r\n                <Heading>{item.value}</Heading>\r\n              </Box>\r\n            </ContentBox>\r\n\r\n            <Link to='/all-tickets'>\r\n              <Tooltip title=\"View Details\" placement=\"top\">\r\n                <IconButton>\r\n                  <Icon>arrow_right_alt</Icon>\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Link>\r\n\r\n          </StyledCard>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatCards;\r\n","import { Card, Fab, Grid, Icon, lighten, styled, useTheme } from '@mui/material';\r\n\r\nconst ContentBox = styled('div')(() => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst FabIcon = styled(Fab)(() => ({\r\n  width: '44px !important',\r\n  height: '44px !important',\r\n  boxShadow: 'none !important',\r\n}));\r\n\r\nconst H3 = styled('h3')(({ textcolor }) => ({\r\n  margin: 0,\r\n  color: textcolor,\r\n  fontWeight: '500',\r\n  marginLeft: '12px',\r\n}));\r\n\r\nconst H1 = styled('h1')(({ theme }) => ({\r\n  margin: 0,\r\n  flexGrow: 1,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Span = styled('span')(({ textcolor }) => ({\r\n  fontSize: '13px',\r\n  color: textcolor,\r\n  marginLeft: '4px',\r\n}));\r\n\r\nconst IconBox = styled('div')(() => ({\r\n  width: 16,\r\n  height: 16,\r\n  color: '#fff',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px ',\r\n  justifyContent: 'center',\r\n  '& .icon': { fontSize: '14px' },\r\n}));\r\n\r\nconst StatCards2 = () => {\r\n  const { palette } = useTheme();\r\n  const textError = palette.error.main;\r\n  const bgError = lighten(palette.error.main, 0.85);\r\n\r\n  return (\r\n    <Grid container spacing={3} sx={{ mb: 3 }}>\r\n      <Grid item xs={12} md={6}>\r\n        <Card elevation={3} sx={{ p: 2 }}>\r\n          <ContentBox>\r\n            <FabIcon size=\"medium\" sx={{ background: 'rgba(9, 182, 109, 0.15)' }}>\r\n              <Icon sx={{ color: '#08ad6c' }}>trending_up</Icon>\r\n            </FabIcon>\r\n            <H3 textcolor={'#08ad6c'}>Active Users</H3>\r\n          </ContentBox>\r\n\r\n          <ContentBox sx={{ pt: 2 }}>\r\n            <H1>10.8k</H1>\r\n            <IconBox sx={{ background: 'rgba(9, 182, 109, 0.15)' }}>\r\n              <Icon className=\"icon\">expand_less</Icon>\r\n            </IconBox>\r\n            <Span textcolor={'#08ad6c'}>(+21%)</Span>\r\n          </ContentBox>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={6}>\r\n        <Card elevation={3} sx={{ p: 2 }}>\r\n          <ContentBox>\r\n            <FabIcon size=\"medium\" sx={{ background: bgError, overflow: 'hidden' }}>\r\n              <Icon sx={{ color: textError }}>star_outline</Icon>\r\n            </FabIcon>\r\n            <H3 textcolor={textError}>Transactions</H3>\r\n          </ContentBox>\r\n\r\n          <ContentBox sx={{ pt: 2 }}>\r\n            <H1>$2.8M</H1>\r\n            <IconBox sx={{ background: bgError }}>\r\n              <Icon className=\"icon\">expand_less</Icon>\r\n            </IconBox>\r\n            <Span textcolor={textError}>(+21%)</Span>\r\n          </ContentBox>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatCards2;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Icon,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { Paragraph } from 'app/components/Typography';\r\n\r\nconst CardHeader = styled(Box)(() => ({\r\n  display: 'flex',\r\n  paddingLeft: '24px',\r\n  paddingRight: '24px',\r\n  marginBottom: '12px',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nconst Title = styled('span')(() => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst ProductTable = styled(Table)(() => ({\r\n  minWidth: 400,\r\n  whiteSpace: 'pre',\r\n  '& small': {\r\n    width: 50,\r\n    height: 15,\r\n    borderRadius: 500,\r\n    boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n  },\r\n  '& td': { borderBottom: 'none' },\r\n  '& td:first-of-type': { paddingLeft: '16px !important' },\r\n}));\r\n\r\nconst Small = styled('small')(({ bgcolor }) => ({\r\n  width: 50,\r\n  height: 15,\r\n  color: '#fff',\r\n  padding: '2px 8px',\r\n  borderRadius: '4px',\r\n  overflow: 'hidden',\r\n  background: bgcolor,\r\n  boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n}));\r\n\r\nconst TopSellingTable = () => {\r\n  const { palette } = useTheme();\r\n  const bgError = palette.error.main;\r\n  const bgPrimary = palette.primary.main;\r\n  const bgSecondary = palette.secondary.main;\r\n\r\n  return (\r\n    <Card elevation={3} sx={{ pt: '20px', mb: 3 }}>\r\n      <CardHeader>\r\n        <Title>top selling products</Title>\r\n        <Select size=\"small\" defaultValue=\"this_month\">\r\n          <MenuItem value=\"this_month\">This Month</MenuItem>\r\n          <MenuItem value=\"last_month\">Last Month</MenuItem>\r\n        </Select>\r\n      </CardHeader>\r\n\r\n      <Box overflow=\"auto\">\r\n        <ProductTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ px: 3 }} colSpan={4}>\r\n                Name\r\n              </TableCell>\r\n              <TableCell sx={{ px: 0 }} colSpan={2}>\r\n                Revenue\r\n              </TableCell>\r\n              <TableCell sx={{ px: 0 }} colSpan={2}>\r\n                Stock Status\r\n              </TableCell>\r\n              <TableCell sx={{ px: 0 }} colSpan={1}>\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {productList.map((product, index) => (\r\n              <TableRow key={index} hover>\r\n                <TableCell colSpan={4} align=\"left\" sx={{ px: 0, textTransform: 'capitalize' }}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Avatar src={product.imgUrl} />\r\n                    <Paragraph sx={{ m: 0, ml: 4 }}>{product.name}</Paragraph>\r\n                  </Box>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"left\" colSpan={2} sx={{ px: 0, textTransform: 'capitalize' }}>\r\n                  ${product.price > 999 ? (product.price / 1000).toFixed(1) + 'k' : product.price}\r\n                </TableCell>\r\n\r\n                <TableCell sx={{ px: 0 }} align=\"left\" colSpan={2}>\r\n                  {product.available ? (\r\n                    product.available < 20 ? (\r\n                      <Small bgcolor={bgSecondary}>{product.available} available</Small>\r\n                    ) : (\r\n                      <Small bgcolor={bgPrimary}>in stock</Small>\r\n                    )\r\n                  ) : (\r\n                    <Small bgcolor={bgError}>out of stock</Small>\r\n                  )}\r\n                </TableCell>\r\n\r\n                <TableCell sx={{ px: 0 }} colSpan={1}>\r\n                  <IconButton>\r\n                    <Icon color=\"primary\">edit</Icon>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </ProductTable>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst productList = [\r\n  {\r\n    imgUrl: '/assets/images/products/headphone-2.jpg',\r\n    name: 'earphone',\r\n    price: 100,\r\n    available: 15,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/headphone-3.jpg',\r\n    name: 'earphone',\r\n    price: 1500,\r\n    available: 30,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/iphone-2.jpg',\r\n    name: 'iPhone x',\r\n    price: 1900,\r\n    available: 35,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/iphone-1.jpg',\r\n    name: 'iPhone x',\r\n    price: 100,\r\n    available: 0,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/headphone-3.jpg',\r\n    name: 'Head phone',\r\n    price: 1190,\r\n    available: 5,\r\n  },\r\n];\r\n\r\nexport default TopSellingTable;\r\n","import { Button, Card, styled } from '@mui/material';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Strings } from 'config/strings';\r\n\r\n\r\nconst CardRoot = styled(Card)(({ theme }) => ({\r\n  marginBottom: '24px',\r\n  padding: '24px !important',\r\n  [theme.breakpoints.down('sm')]: { paddingLeft: '16px !important' },\r\n}));\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  padding: '24px !important',\r\n  background: `rgb(${convertHexToRGB(theme.palette.primary.main)}, 0.15) !important`,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst Paragraph = styled('p')(({ theme }) => ({\r\n  margin: 0,\r\n  paddingTop: '24px',\r\n  paddingBottom: '24px',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst UpgradeCard = () => {\r\n  const url = Strings.GLEREN_WEBSITE.concat(Strings.GLEREN_CONTACT_US_PATH);\r\n  return (\r\n    <CardRoot>\r\n      <StyledCard elevation={0}>\r\n        <img src=\"/assets/images/illustrations/upgrade.svg\" alt=\"upgrade\" />\r\n\r\n        <Paragraph>\r\n          Upgrade to <b>BASIC</b> OR <b> PREMIUM Plan</b>  for <br /> more features and unlimited user access\r\n        </Paragraph>\r\n\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: 'uppercase' }}\r\n          onClick={() => window.open(url, '_blank')} \r\n        >\r\n          upgrade now\r\n        </Button>\r\n      </StyledCard>\r\n    </CardRoot>\r\n   \r\n  );\r\n};\r\n\r\nexport default UpgradeCard;\r\n","import { Card, Grid, styled, useTheme } from '@mui/material';\r\nimport { getDashboardData } from 'app/services/ticketService';\r\nimport { getProfilePic } from 'app/services/userService';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useLocation, useSearchParams } from 'react-router-dom';\r\nimport Campaigns from './shared/Campaigns';\r\nimport DoughnutChart from './shared/Doughnut';\r\nimport RowCards from './shared/RowCards';\r\nimport StatCards from './shared/StatCards';\r\nimport StatCards2 from './shared/StatCards2';\r\nimport TopSellingTable from './shared/TopSellingTable';\r\nimport UpgradeCard from './shared/UpgradeCard';\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n}));\r\n\r\nconst Title = styled('span')(() => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  marginRight: '.5rem',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  marginBottom: '16px',\r\n  textTransform: 'capitalize',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Analytics = () => {\r\n  const { palette } = useTheme();\r\n  let [searchParams] = useSearchParams();\r\n  const searchdata = searchParams.get('updated')\r\n  const [dashboardData, setDashboardData] = useState();\r\n  useEffect(() => {\r\n    fetchDashboardData()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(searchdata){\r\n      getProfilePic()\r\n    }\r\n  },[searchdata])\r\n  const fetchDashboardData = () => {\r\n\r\n    getDashboardData({}).then((response) => {\r\n      setDashboardData(response?.data);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ContentBox className=\"analytics\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={8} md={8} sm={12} xs={12}>\r\n            <StatCards data={dashboardData} />\r\n            {/* <TopSellingTable />\r\n            <StatCards2 />\r\n\r\n            <H4>Ongoing Projects</H4>\r\n            <RowCards /> */}\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={12} xs={12}>\r\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\r\n              <Title>Your Tickets Statistics </Title>\r\n              <DoughnutChart\r\n                height=\"300px\"\r\n                color={[palette.primary.dark, '#FFAF38']}\r\n                toDoTicketCount={dashboardData?.toDoTicketCount}\r\n                inProgressTicketsCount={dashboardData?.inProgressTicketsCount}\r\n              />\r\n            </Card>\r\n\r\n            <UpgradeCard />\r\n            {/* <Campaigns /> */}\r\n          </Grid>\r\n        </Grid>\r\n      </ContentBox>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"sourceRoot":""}