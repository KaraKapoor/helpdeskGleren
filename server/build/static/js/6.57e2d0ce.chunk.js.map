{"version":3,"sources":["../../../src/helper/pick.ts","../../../src/helper/is-function.ts","../../src/index.ts","../../src/core.tsx","../../../src/helper/is-string.ts","../node_modules/size-sensor/lib/debounce.js","../node_modules/size-sensor/lib/constant.js","../node_modules/size-sensor/lib/index.js","../node_modules/size-sensor/lib/sensorPool.js","../node_modules/size-sensor/lib/id.js","../node_modules/size-sensor/lib/sensors/index.js","../node_modules/size-sensor/lib/sensors/object.js","../node_modules/size-sensor/lib/sensors/resizeObserver.js","app/views/dashboard/shared/Doughnut.jsx","app/views/dashboard/shared/RowCards.jsx","app/views/dashboard/shared/StatCards.jsx","app/views/dashboard/shared/StatCards2.jsx","app/views/dashboard/shared/TopSellingTable.jsx","app/views/dashboard/shared/UpgradeCard.jsx","app/views/dashboard/Analytics.jsx"],"names":["pick","obj","keys","r","forEach","key","isFunction","v","props","echarts","EChartsReact","ele","isInitialResize","componentDidMount","this","renderNewEcharts","componentDidUpdate","prevProps","shouldSetOption","theme","opts","onEvents","dispose","pickKeys","updateEChartsOption","style","className","resize","componentWillUnmount","getEchartsInstance","getInstanceByDom","init","e","console","warn","onChartReady","echartsInstance","bindEvents","instance","events","_bindEvent","eventName","func","on","param","Object","prototype","hasOwnProperty","call","option","notMerge","lazyUpdate","showLoading","loadingOption","echartInstance","setOption","hideLoading","render","newStyle","height","ref","defineProperty","exports","value","fn","delay","arguments","length","undefined","timer","_this","_len","args","Array","_key","clearTimeout","setTimeout","apply","SensorTabIndex","SensorClassName","SizeSensorId","ver","clear","bind","_sensorPool","require","element","cb","sensor","getSensor","unbind","removeSensor","_id","__esModule","_sensors","_constant","Sensors","sensorId","getAttribute","newId","setAttribute","createSensor","removeAttribute","destroy","id","concat","_object","_resizeObserver","ResizeObserver","_debounce","listeners","resizeListener","listener","parentNode","contentDocument","defaultView","removeEventListener","removeChild","getComputedStyle","position","document","createElement","onload","addEventListener","display","top","left","width","overflow","pointerEvents","zIndex","opacity","type","appendChild","data","newSensor","indexOf","push","idx","splice","disconnect","s","observe","DoughnutChart","color","toDoTicketCount","inProgressTicketsCount","useTheme","legend","show","itemGap","icon","bottom","textStyle","palette","text","secondary","fontSize","fontFamily","tooltip","trigger","formatter","xAxis","axisLine","splitLine","yAxis","series","name","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","emphasis","fontWeight","labelLine","itemStyle","shadowBlur","shadowOffsetX","shadowColor","styled","Span","marginLeft","breakpoints","down","Fab","boxShadow","background","backgroundColor","error","main","Avatar","StyledCard","Card","flexWrap","alignItems","justifyContent","padding","paper","ContentBox","Box","primary","Heading","margin","marginTop","StatCards","cardList","cardname","assignedTicketsCount","assignedBlockerTicketCount","resolvedTicketCount","reviewedTicketCount","testedTicketCount","totalTicketCreatedCount","navigate","useNavigate","Grid","container","spacing","sx","mb","map","item","index","xs","md","elevation","Icon","ml","Tooltip","title","placement","IconButton","onClick","card_name","user","JSON","parse","localStorage","getItem","queryparams","userId","NavigateTo","textcolor","flexGrow","borderRadius","paddingLeft","paddingRight","marginBottom","textTransform","Table","minWidth","whiteSpace","borderBottom","bgcolor","CardRoot","textAlign","convertHexToRGB","Paragraph","paddingTop","paddingBottom","UpgradeCard","url","Strings","GLEREN_WEBSITE","GLEREN_CONTACT_US_PATH","src","alt","Button","size","variant","window","open","Title","marginRight","Analytics","useSearchParams","searchdata","get","useState","dashboardData","setDashboardData","useEffect","fetchDashboardData","getProfilePic","getDashboardData","then","response","lg","sm","px","py","Doughnut","dark"],"mappings":"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","file":"static/js/6.57e2d0ce.chunk.js","sourcesContent":["/**\n * 保留 object 中的部分内容\n * @param obj\n * @param keys\n */\nexport function pick(obj: Record<string, unknown>, keys: string[]): Record<string, unknown> {\n  const r = {};\n  keys.forEach((key) => {\n    r[key] = obj[key];\n  });\n  return r;\n}\n","export function isFunction(v: any): boolean {\n  return typeof v === 'function';\n}\n","import * as echarts from 'echarts';\nimport { EChartsReactProps, EChartsOption, EChartsInstance } from './types';\nimport EChartsReactCore from './core';\n\nexport { EChartsReactProps, EChartsOption, EChartsInstance };\n\n// export the Component the echarts Object.\nexport default class EChartsReact extends EChartsReactCore {\n  constructor(props: EChartsReactProps) {\n    super(props);\n\n    // 初始化为 echarts 整个包\n    this.echarts = echarts;\n  }\n}\n","import type { ECharts } from 'echarts';\nimport React, { PureComponent } from 'react';\nimport { bind, clear } from 'size-sensor';\nimport { pick } from './helper/pick';\nimport { isFunction } from './helper/is-function';\nimport { isString } from './helper/is-string';\nimport { isEqual } from './helper/is-equal';\nimport { EChartsReactProps, EChartsInstance } from './types';\n\n/**\n * core component for echarts binding\n */\nexport default class EChartsReactCore extends PureComponent<EChartsReactProps> {\n  /**\n   * echarts render container\n   */\n  public ele: HTMLElement;\n\n  /**\n   * if this is the first time we are resizing\n   */\n  private isInitialResize: boolean;\n\n  /**\n   * echarts library entry\n   */\n  protected echarts: any;\n\n  constructor(props: EChartsReactProps) {\n    super(props);\n\n    this.echarts = props.echarts;\n    this.ele = null;\n    this.isInitialResize = true;\n  }\n\n  componentDidMount() {\n    this.renderNewEcharts();\n  }\n\n  // update\n  componentDidUpdate(prevProps: EChartsReactProps) {\n    /**\n     * if shouldSetOption return false, then return, not update echarts options\n     * default is true\n     */\n    const { shouldSetOption } = this.props;\n    if (isFunction(shouldSetOption) && !shouldSetOption(prevProps, this.props)) {\n      return;\n    }\n\n    // 以下属性修改的时候，需要 dispose 之后再新建\n    // 1. 切换 theme 的时候\n    // 2. 修改 opts 的时候\n    // 3. 修改 onEvents 的时候，这样可以取消所有之前绑定的事件 issue #151\n    if (\n      !isEqual(prevProps.theme, this.props.theme) ||\n      !isEqual(prevProps.opts, this.props.opts) ||\n      !isEqual(prevProps.onEvents, this.props.onEvents)\n    ) {\n      this.dispose();\n\n      this.renderNewEcharts(); // 重建\n      return;\n    }\n\n    // when these props are not isEqual, update echarts\n    const pickKeys = ['option', 'notMerge', 'lazyUpdate', 'showLoading', 'loadingOption'];\n    if (!isEqual(pick(this.props, pickKeys), pick(prevProps, pickKeys))) {\n      this.updateEChartsOption();\n    }\n\n    /**\n     * when style or class name updated, change size.\n     */\n    if (!isEqual(prevProps.style, this.props.style) || !isEqual(prevProps.className, this.props.className)) {\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  /**\n   * return the echart object\n   * 1. if exist, return the existed instance\n   * 2. or new one instance\n   */\n  public getEchartsInstance(): ECharts {\n    return this.echarts.getInstanceByDom(this.ele) || this.echarts.init(this.ele, this.props.theme, this.props.opts);\n  }\n\n  /**\n   * dispose echarts and clear size-sensor\n   */\n  private dispose() {\n    if (this.ele) {\n      try {\n        clear(this.ele);\n      } catch (e) {\n        console.warn(e);\n      }\n      // dispose echarts instance\n      this.echarts.dispose(this.ele);\n    }\n  }\n\n  /**\n   * render a new echarts instance\n   */\n  private renderNewEcharts() {\n    const { onEvents, onChartReady } = this.props;\n\n    // 1. new echarts instance\n    const echartsInstance = this.updateEChartsOption();\n\n    // 2. bind events\n    this.bindEvents(echartsInstance, onEvents || {});\n\n    // 3. on chart ready\n    if (isFunction(onChartReady)) onChartReady(echartsInstance);\n\n    // 4. on resize\n    if (this.ele) {\n      bind(this.ele, () => {\n        this.resize();\n      });\n    }\n  }\n\n  // bind the events\n  private bindEvents(instance, events: EChartsReactProps['onEvents']) {\n    function _bindEvent(eventName: string, func: Function) {\n      // ignore the event config which not satisfy\n      if (isString(eventName) && isFunction(func)) {\n        // binding event\n        instance.on(eventName, (param) => {\n          func(param, instance);\n        });\n      }\n    }\n\n    // loop and bind\n    for (const eventName in events) {\n      if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n        _bindEvent(eventName, events[eventName]);\n      }\n    }\n  }\n\n  /**\n   * render the echarts\n   */\n  private updateEChartsOption(): EChartsInstance {\n    const { option, notMerge = false, lazyUpdate = false, showLoading, loadingOption = null } = this.props;\n    // 1. get or initial the echarts object\n    const echartInstance = this.getEchartsInstance();\n    // 2. set the echarts option\n    echartInstance.setOption(option, notMerge, lazyUpdate);\n    // 3. set loading mask\n    if (showLoading) echartInstance.showLoading(loadingOption);\n    else echartInstance.hideLoading();\n\n    return echartInstance;\n  }\n\n  /**\n   * resize wrapper\n   */\n  private resize() {\n    // 1. get the echarts object\n    const echartsInstance = this.getEchartsInstance();\n\n    // 2. call echarts instance resize if not the initial resize\n    // resize should not happen on first render as it will cancel initial echarts animations\n    if (!this.isInitialResize) {\n      try {\n        echartsInstance.resize();\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n\n    // 3. update variable for future calls\n    this.isInitialResize = false;\n  }\n\n  render(): JSX.Element {\n    const { style, className = '' } = this.props;\n    // default height = 300\n    const newStyle = { height: 300, ...style };\n\n    return (\n      <div\n        ref={(e: HTMLElement) => {\n          this.ele = e;\n        }}\n        style={newStyle}\n        className={`echarts-for-react ${className}`}\n      />\n    );\n  }\n}\n","export function isString(v: any): boolean {\n  return typeof v === 'string';\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\nvar _default = function _default(fn) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;\n  var timer = null;\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(_this, args);\n    }, delay);\n  };\n};\n\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SensorTabIndex = exports.SensorClassName = exports.SizeSensorId = void 0;\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\nvar SizeSensorId = 'size-sensor-id';\nexports.SizeSensorId = SizeSensorId;\nvar SensorClassName = 'size-sensor-object';\nexports.SensorClassName = SensorClassName;\nvar SensorTabIndex = '-1';\nexports.SensorTabIndex = SensorTabIndex;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ver = exports.clear = exports.bind = void 0;\n\nvar _sensorPool = require(\"./sensorPool\");\n\n/**\n * Created by hustcc on 18/6/9.[高考时间]\n * Contract: i@hust.cc\n */\n\n/**\n * bind an element with resize callback function\n * @param {*} element\n * @param {*} cb\n */\nvar bind = function bind(element, cb) {\n  var sensor = (0, _sensorPool.getSensor)(element); // listen with callback\n\n  sensor.bind(cb); // return unbind function\n\n  return function () {\n    sensor.unbind(cb);\n  };\n};\n/**\n * clear all the listener and sensor of an element\n * @param element\n */\n\n\nexports.bind = bind;\n\nvar clear = function clear(element) {\n  var sensor = (0, _sensorPool.getSensor)(element);\n  (0, _sensorPool.removeSensor)(sensor);\n};\n\nexports.clear = clear;\nvar ver = \"1.0.1\";\nexports.ver = ver;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSensor = exports.getSensor = void 0;\n\nvar _id = _interopRequireDefault(require(\"./id\"));\n\nvar _sensors = require(\"./sensors\");\n\nvar _constant = require(\"./constant\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\n/**\n * all the sensor objects.\n * sensor pool\n */\nvar Sensors = {};\n/**\n * get one sensor\n * @param element\n * @returns {*}\n */\n\nvar getSensor = function getSensor(element) {\n  var sensorId = element.getAttribute(_constant.SizeSensorId); // 1. if the sensor exists, then use it\n\n  if (sensorId && Sensors[sensorId]) {\n    return Sensors[sensorId];\n  } // 2. not exist, then create one\n\n\n  var newId = (0, _id[\"default\"])();\n  element.setAttribute(_constant.SizeSensorId, newId);\n  var sensor = (0, _sensors.createSensor)(element); // add sensor into pool\n\n  Sensors[newId] = sensor;\n  return sensor;\n};\n/**\n * 移除 sensor\n * @param sensor\n */\n\n\nexports.getSensor = getSensor;\n\nvar removeSensor = function removeSensor(sensor) {\n  var sensorId = sensor.element.getAttribute(_constant.SizeSensorId); // remove attribute\n\n  sensor.element.removeAttribute(_constant.SizeSensorId); // remove event, dom of the sensor used\n\n  sensor.destroy(); // exist, then remove from pool\n\n  if (sensorId && Sensors[sensorId]) {\n    delete Sensors[sensorId];\n  }\n};\n\nexports.removeSensor = removeSensor;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\nvar id = 1;\n/**\n * generate unique id in application\n * @return {string}\n */\n\nvar _default = function _default() {\n  return \"\".concat(id++);\n};\n\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = void 0;\n\nvar _object = require(\"./object\");\n\nvar _resizeObserver = require(\"./resizeObserver\");\n\n/**\n * Created by hustcc on 18/7/5.\n * Contract: i@hust.cc\n */\n\n/**\n * sensor strategies\n */\n// export const createSensor = createObjectSensor;\nvar createSensor = typeof ResizeObserver !== 'undefined' ? _resizeObserver.createSensor : _object.createSensor;\nexports.createSensor = createSensor;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = void 0;\n\nvar _debounce = _interopRequireDefault(require(\"../debounce\"));\n\nvar _constant = require(\"../constant\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\nvar createSensor = function createSensor(element) {\n  var sensor = undefined; // callback\n\n  var listeners = [];\n  /**\n   * create object DOM of sensor\n   * @returns {HTMLObjectElement}\n   */\n\n  var newSensor = function newSensor() {\n    // adjust style\n    if (getComputedStyle(element).position === 'static') {\n      element.style.position = 'relative';\n    }\n\n    var obj = document.createElement('object');\n\n    obj.onload = function () {\n      obj.contentDocument.defaultView.addEventListener('resize', resizeListener); // 直接触发一次 resize\n\n      resizeListener();\n    };\n\n    obj.style.display = 'block';\n    obj.style.position = 'absolute';\n    obj.style.top = '0';\n    obj.style.left = '0';\n    obj.style.height = '100%';\n    obj.style.width = '100%';\n    obj.style.overflow = 'hidden';\n    obj.style.pointerEvents = 'none';\n    obj.style.zIndex = '-1';\n    obj.style.opacity = '0';\n    obj.setAttribute('class', _constant.SensorClassName);\n    obj.setAttribute('tabindex', _constant.SensorTabIndex);\n    obj.type = 'text/html'; // append into dom\n\n    element.appendChild(obj); // for ie, should set data attribute delay, or will be white screen\n\n    obj.data = 'about:blank';\n    return obj;\n  };\n  /**\n   * trigger listeners\n   */\n\n\n  var resizeListener = (0, _debounce[\"default\"])(function () {\n    // trigger all listener\n    listeners.forEach(function (listener) {\n      listener(element);\n    });\n  });\n  /**\n   * listen with one callback function\n   * @param cb\n   */\n\n  var bind = function bind(cb) {\n    // if not exist sensor, then create one\n    if (!sensor) {\n      sensor = newSensor();\n    }\n\n    if (listeners.indexOf(cb) === -1) {\n      listeners.push(cb);\n    }\n  };\n  /**\n   * destroy all\n   */\n\n\n  var destroy = function destroy() {\n    if (sensor && sensor.parentNode) {\n      if (sensor.contentDocument) {\n        // remote event\n        sensor.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n      } // remove dom\n\n\n      sensor.parentNode.removeChild(sensor); // initial variable\n\n      sensor = undefined;\n      listeners = [];\n    }\n  };\n  /**\n   * cancel listener bind\n   * @param cb\n   */\n\n\n  var unbind = function unbind(cb) {\n    var idx = listeners.indexOf(cb);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    } // no listener, and sensor is exist\n    // then destroy the sensor\n\n\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n};\n\nexports.createSensor = createSensor;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = void 0;\n\nvar _debounce = _interopRequireDefault(require(\"../debounce\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Created by hustcc on 18/7/5.\n * Contract: i@hust.cc\n */\nvar createSensor = function createSensor(element) {\n  var sensor = undefined; // callback\n\n  var listeners = [];\n  /**\n   * trigger listeners\n   */\n\n  var resizeListener = (0, _debounce[\"default\"])(function () {\n    // trigger all\n    listeners.forEach(function (listener) {\n      listener(element);\n    });\n  });\n  /**\n   * create ResizeObserver sensor\n   * @returns\n   */\n\n  var newSensor = function newSensor() {\n    var s = new ResizeObserver(resizeListener); // listen element\n\n    s.observe(element); // trigger once\n\n    resizeListener();\n    return s;\n  };\n  /**\n   * listen with callback\n   * @param cb\n   */\n\n\n  var bind = function bind(cb) {\n    if (!sensor) {\n      sensor = newSensor();\n    }\n\n    if (listeners.indexOf(cb) === -1) {\n      listeners.push(cb);\n    }\n  };\n  /**\n   * destroy\n   */\n\n\n  var destroy = function destroy() {\n    sensor.disconnect();\n    listeners = [];\n    sensor = undefined;\n  };\n  /**\n   * cancel bind\n   * @param cb\n   */\n\n\n  var unbind = function unbind(cb) {\n    var idx = listeners.indexOf(cb);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    } // no listener, and sensor is exist\n    // then destroy the sensor\n\n\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n};\n\nexports.createSensor = createSensor;","import React from 'react'\r\nimport { useTheme } from '@mui/system'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nconst DoughnutChart = ({ height, color = [], toDoTicketCount, inProgressTicketsCount }) => {\r\n    const theme = useTheme()\r\n\r\n    const option = {\r\n        legend: {\r\n            show: true,\r\n            itemGap: 20,\r\n            icon: 'circle',\r\n            bottom: 0,\r\n            textStyle: {\r\n                color: theme.palette.text.secondary,\r\n                fontSize: 13,\r\n                fontFamily: 'roboto',\r\n            },\r\n        },\r\n        tooltip: {\r\n            show: false,\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n        },\r\n        xAxis: [\r\n            {\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n        ],\r\n        yAxis: [\r\n            {\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n        ],\r\n\r\n        series: [\r\n            {\r\n                name: 'Tickets',\r\n                type: 'pie',\r\n                radius: ['45%', '72.55%'],\r\n                center: ['50%', '50%'],\r\n                avoidLabelOverlap: false,\r\n                hoverOffset: 5,\r\n                stillShowZeroSum: false,\r\n                label: {\r\n                    normal: {\r\n                        show: false,\r\n                        position: 'center', // shows the description data to center, turn off to show in right side\r\n                        textStyle: {\r\n                            color: theme.palette.text.secondary,\r\n                            fontSize: 13,\r\n                            fontFamily: 'roboto',\r\n                        },\r\n                        formatter: '{a}',\r\n                    },\r\n                    emphasis: {\r\n                        show: true,\r\n                        textStyle: {\r\n                            fontSize: '14',\r\n                            fontWeight: 'normal',\r\n                            // color: \"rgba(15, 21, 77, 1)\"\r\n                        },\r\n                        formatter: '{b} \\n{c} ({d}%)',\r\n                    },\r\n                },\r\n                labelLine: {\r\n                    normal: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                data: [\r\n                    {\r\n                        value: toDoTicketCount > 0 ? toDoTicketCount : 100,\r\n                        name: 'To-Do',\r\n                    },\r\n                    {\r\n                        value: inProgressTicketsCount,\r\n                        name: 'In-Progress',\r\n                    },\r\n                ],\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    }\r\n\r\n    return (\r\n        <ReactEcharts\r\n            style={{ height: height }}\r\n            option={{\r\n                ...option,\r\n                color: [...color],\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DoughnutChart\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Fab,\r\n  Grid,\r\n  Hidden,\r\n  Icon,\r\n  IconButton,\r\n  styled,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { Span } from 'app/components/Typography';\r\nimport { format } from 'date-fns';\r\nimport { Fragment } from 'react';\r\n\r\nconst ProjectName = styled(Span)(({ theme }) => ({\r\n  marginLeft: 24,\r\n  fontWeight: '500',\r\n  [theme.breakpoints.down('sm')]: { marginLeft: 4 },\r\n}));\r\n\r\nconst StarOutline = styled(Fab)(() => ({\r\n  marginLeft: 0,\r\n  boxShadow: 'none',\r\n  background: '#08ad6c !important',\r\n  backgroundColor: 'rgba(9, 182, 109, 1) !important',\r\n}));\r\n\r\nconst DateRange = styled(Fab)(({ theme }) => ({\r\n  marginLeft: 0,\r\n  boxShadow: 'none',\r\n  color: 'white !important',\r\n  background: `${theme.palette.error.main} !important`,\r\n}));\r\n\r\nconst StyledAvatar = styled(Avatar)(() => ({\r\n  width: '32px !important',\r\n  height: '32px !important',\r\n}));\r\n\r\nconst RowCards = () => {\r\n  const { palette } = useTheme();\r\n  const textMuted = palette.text.secondary;\r\n\r\n  return [1, 2, 3, 4].map((id) => (\r\n    <Fragment key={id}>\r\n      <Card sx={{ py: 1, px: 2 }} className=\"project-card\">\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item md={5} xs={7}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Checkbox />\r\n              <Hidden smDown>\r\n                {id % 2 === 1 ? (\r\n                  <StarOutline size=\"small\">\r\n                    <Icon>star_outline</Icon>\r\n                  </StarOutline>\r\n                ) : (\r\n                  <DateRange size=\"small\">\r\n                    <Icon>date_range</Icon>\r\n                  </DateRange>\r\n                )}\r\n              </Hidden>\r\n              <ProjectName>Project {id}</ProjectName>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item md={3} xs={4}>\r\n            <Box color={textMuted}>{format(new Date().getTime(), 'MM/dd/yyyy hh:mma')}</Box>\r\n          </Grid>\r\n\r\n          <Hidden smDown>\r\n            <Grid item xs={3}>\r\n              <Box display=\"flex\" position=\"relative\" marginLeft=\"-0.875rem !important\">\r\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\r\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\r\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\r\n                <StyledAvatar sx={{ fontSize: '14px' }}>+3</StyledAvatar>\r\n              </Box>\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Grid item xs={1}>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              <IconButton>\r\n                <Icon>more_vert</Icon>\r\n              </IconButton>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Box py={1} />\r\n    </Fragment>\r\n  ));\r\n};\r\n\r\nexport default RowCards;\r\n","import { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\r\nimport { Small } from 'app/components/Typography';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '24px !important',\r\n  background: theme.palette.background.paper,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  '& small': { color: theme.palette.text.secondary },\r\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\r\n}));\r\n\r\nconst Heading = styled('h6')(({ theme }) => ({\r\n  margin: 0,\r\n  marginTop: '4px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst StatCards = ({ data }) => {\r\n   \r\n  const cardList = [\r\n    { name: `Assigned Tickets`, cardname: \"assignTicket\", value: data?.assignedTicketsCount, icon: 'assignment' },\r\n    { name: `Blocker/Critical Tickets Assigned`, cardname: \"blocker/CriticalTicket\", value: data?.assignedBlockerTicketCount, icon: 'block' },\r\n    { name: `Tickets Resolved By Me`, cardname: \"ticketResolvedByMe\", value: data?.resolvedTicketCount, icon: 'work' },\r\n    { name: `Tickets Reviewed By Me`, cardname: \"ticketReviewedByMe\", value: data?.reviewedTicketCount, icon: 'rate_review' },\r\n    { name: `Tickets Tested By Me`, cardname: \"ticketTestedByMe\", value: data?.testedTicketCount, icon: 'bug_report' },\r\n    { name: `Tickets Created By Me`, cardname: \"ticketCreatedByMe\", value: data?.totalTicketCreatedCount, icon: 'create' },\r\n  ];\r\n\r\n  const navigate = useNavigate();\r\n  const NavigateTo = (card_name) => {\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n    const queryparams = `?name=${card_name}/${user.userId}`\r\n\r\n    switch (card_name) {\r\n      case 'assignTicket':\r\n        return (\r\n          navigate(`/all-tickets` + queryparams)\r\n        )\r\n      case 'ticketResolvedByMe':\r\n        return (\r\n          navigate(`/all-tickets` + queryparams)\r\n        )\r\n      case 'ticketTestedByMe':\r\n        return (\r\n          navigate(`/all-tickets` + queryparams)\r\n        )\r\n      case 'blocker/CriticalTicket':\r\n        return (\r\n          navigate(`/all-tickets` + queryparams)\r\n        )\r\n      case 'ticketReviewedByMe':\r\n        return (\r\n          navigate(`/all-tickets` + queryparams)\r\n        )\r\n      case 'ticketCreatedByMe':\r\n        return (\r\n          navigate(`/all-tickets` + queryparams)\r\n        )\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3} sx={{ mb: '24px' }}>\r\n      {cardList.map((item, index) => (\r\n        <Grid item xs={12} md={6} key={index}>\r\n          <StyledCard elevation={6}>\r\n            <ContentBox>\r\n              <Icon className=\"icon\">{item.icon}</Icon>\r\n              <Box ml=\"12px\">\r\n                <Small>{item.name}</Small>\r\n                <Heading>{item.value}</Heading>\r\n              </Box>\r\n            </ContentBox>\r\n            <Tooltip title=\"View Details\" placement=\"top\">\r\n              <IconButton onClick={() => NavigateTo(item?.cardname)}>\r\n                <Icon>arrow_right_alt</Icon>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </StyledCard>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatCards;\r\n","import { Card, Fab, Grid, Icon, lighten, styled, useTheme } from '@mui/material';\r\n\r\nconst ContentBox = styled('div')(() => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst FabIcon = styled(Fab)(() => ({\r\n  width: '44px !important',\r\n  height: '44px !important',\r\n  boxShadow: 'none !important',\r\n}));\r\n\r\nconst H3 = styled('h3')(({ textcolor }) => ({\r\n  margin: 0,\r\n  color: textcolor,\r\n  fontWeight: '500',\r\n  marginLeft: '12px',\r\n}));\r\n\r\nconst H1 = styled('h1')(({ theme }) => ({\r\n  margin: 0,\r\n  flexGrow: 1,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Span = styled('span')(({ textcolor }) => ({\r\n  fontSize: '13px',\r\n  color: textcolor,\r\n  marginLeft: '4px',\r\n}));\r\n\r\nconst IconBox = styled('div')(() => ({\r\n  width: 16,\r\n  height: 16,\r\n  color: '#fff',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px ',\r\n  justifyContent: 'center',\r\n  '& .icon': { fontSize: '14px' },\r\n}));\r\n\r\nconst StatCards2 = () => {\r\n  const { palette } = useTheme();\r\n  const textError = palette.error.main;\r\n  const bgError = lighten(palette.error.main, 0.85);\r\n\r\n  return (\r\n    <Grid container spacing={3} sx={{ mb: 3 }}>\r\n      <Grid item xs={12} md={6}>\r\n        <Card elevation={3} sx={{ p: 2 }}>\r\n          <ContentBox>\r\n            <FabIcon size=\"medium\" sx={{ background: 'rgba(9, 182, 109, 0.15)' }}>\r\n              <Icon sx={{ color: '#08ad6c' }}>trending_up</Icon>\r\n            </FabIcon>\r\n            <H3 textcolor={'#08ad6c'}>Active Users</H3>\r\n          </ContentBox>\r\n\r\n          <ContentBox sx={{ pt: 2 }}>\r\n            <H1>10.8k</H1>\r\n            <IconBox sx={{ background: 'rgba(9, 182, 109, 0.15)' }}>\r\n              <Icon className=\"icon\">expand_less</Icon>\r\n            </IconBox>\r\n            <Span textcolor={'#08ad6c'}>(+21%)</Span>\r\n          </ContentBox>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={6}>\r\n        <Card elevation={3} sx={{ p: 2 }}>\r\n          <ContentBox>\r\n            <FabIcon size=\"medium\" sx={{ background: bgError, overflow: 'hidden' }}>\r\n              <Icon sx={{ color: textError }}>star_outline</Icon>\r\n            </FabIcon>\r\n            <H3 textcolor={textError}>Transactions</H3>\r\n          </ContentBox>\r\n\r\n          <ContentBox sx={{ pt: 2 }}>\r\n            <H1>$2.8M</H1>\r\n            <IconBox sx={{ background: bgError }}>\r\n              <Icon className=\"icon\">expand_less</Icon>\r\n            </IconBox>\r\n            <Span textcolor={textError}>(+21%)</Span>\r\n          </ContentBox>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatCards2;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Icon,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { Paragraph } from 'app/components/Typography';\r\n\r\nconst CardHeader = styled(Box)(() => ({\r\n  display: 'flex',\r\n  paddingLeft: '24px',\r\n  paddingRight: '24px',\r\n  marginBottom: '12px',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nconst Title = styled('span')(() => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst ProductTable = styled(Table)(() => ({\r\n  minWidth: 400,\r\n  whiteSpace: 'pre',\r\n  '& small': {\r\n    width: 50,\r\n    height: 15,\r\n    borderRadius: 500,\r\n    boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n  },\r\n  '& td': { borderBottom: 'none' },\r\n  '& td:first-of-type': { paddingLeft: '16px !important' },\r\n}));\r\n\r\nconst Small = styled('small')(({ bgcolor }) => ({\r\n  width: 50,\r\n  height: 15,\r\n  color: '#fff',\r\n  padding: '2px 8px',\r\n  borderRadius: '4px',\r\n  overflow: 'hidden',\r\n  background: bgcolor,\r\n  boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n}));\r\n\r\nconst TopSellingTable = () => {\r\n  const { palette } = useTheme();\r\n  const bgError = palette.error.main;\r\n  const bgPrimary = palette.primary.main;\r\n  const bgSecondary = palette.secondary.main;\r\n\r\n  return (\r\n    <Card elevation={3} sx={{ pt: '20px', mb: 3 }}>\r\n      <CardHeader>\r\n        <Title>top selling products</Title>\r\n        <Select size=\"small\" defaultValue=\"this_month\">\r\n          <MenuItem value=\"this_month\">This Month</MenuItem>\r\n          <MenuItem value=\"last_month\">Last Month</MenuItem>\r\n        </Select>\r\n      </CardHeader>\r\n\r\n      <Box overflow=\"auto\">\r\n        <ProductTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ px: 3 }} colSpan={4}>\r\n                Name\r\n              </TableCell>\r\n              <TableCell sx={{ px: 0 }} colSpan={2}>\r\n                Revenue\r\n              </TableCell>\r\n              <TableCell sx={{ px: 0 }} colSpan={2}>\r\n                Stock Status\r\n              </TableCell>\r\n              <TableCell sx={{ px: 0 }} colSpan={1}>\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {productList.map((product, index) => (\r\n              <TableRow key={index} hover>\r\n                <TableCell colSpan={4} align=\"left\" sx={{ px: 0, textTransform: 'capitalize' }}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Avatar src={product.imgUrl} />\r\n                    <Paragraph sx={{ m: 0, ml: 4 }}>{product.name}</Paragraph>\r\n                  </Box>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"left\" colSpan={2} sx={{ px: 0, textTransform: 'capitalize' }}>\r\n                  ${product.price > 999 ? (product.price / 1000).toFixed(1) + 'k' : product.price}\r\n                </TableCell>\r\n\r\n                <TableCell sx={{ px: 0 }} align=\"left\" colSpan={2}>\r\n                  {product.available ? (\r\n                    product.available < 20 ? (\r\n                      <Small bgcolor={bgSecondary}>{product.available} available</Small>\r\n                    ) : (\r\n                      <Small bgcolor={bgPrimary}>in stock</Small>\r\n                    )\r\n                  ) : (\r\n                    <Small bgcolor={bgError}>out of stock</Small>\r\n                  )}\r\n                </TableCell>\r\n\r\n                <TableCell sx={{ px: 0 }} colSpan={1}>\r\n                  <IconButton>\r\n                    <Icon color=\"primary\">edit</Icon>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </ProductTable>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst productList = [\r\n  {\r\n    imgUrl: '/assets/images/products/headphone-2.jpg',\r\n    name: 'earphone',\r\n    price: 100,\r\n    available: 15,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/headphone-3.jpg',\r\n    name: 'earphone',\r\n    price: 1500,\r\n    available: 30,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/iphone-2.jpg',\r\n    name: 'iPhone x',\r\n    price: 1900,\r\n    available: 35,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/iphone-1.jpg',\r\n    name: 'iPhone x',\r\n    price: 100,\r\n    available: 0,\r\n  },\r\n  {\r\n    imgUrl: '/assets/images/products/headphone-3.jpg',\r\n    name: 'Head phone',\r\n    price: 1190,\r\n    available: 5,\r\n  },\r\n];\r\n\r\nexport default TopSellingTable;\r\n","import { Button, Card, styled } from '@mui/material';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Strings } from 'config/strings';\r\n\r\n\r\nconst CardRoot = styled(Card)(({ theme }) => ({\r\n  marginBottom: '24px',\r\n  padding: '24px !important',\r\n  [theme.breakpoints.down('sm')]: { paddingLeft: '16px !important' },\r\n}));\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  padding: '24px !important',\r\n  background: `rgb(${convertHexToRGB(theme.palette.primary.main)}, 0.15) !important`,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst Paragraph = styled('p')(({ theme }) => ({\r\n  margin: 0,\r\n  paddingTop: '24px',\r\n  paddingBottom: '24px',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst UpgradeCard = () => {\r\n  const url = Strings.GLEREN_WEBSITE.concat(Strings.GLEREN_CONTACT_US_PATH);\r\n  return (\r\n    <CardRoot>\r\n      <StyledCard elevation={0}>\r\n        <img src=\"/assets/images/illustrations/upgrade.svg\" alt=\"upgrade\" />\r\n\r\n        <Paragraph>\r\n          Upgrade to <b>BASIC</b> OR <b> PREMIUM Plan</b>  for <br /> more features and unlimited user access\r\n        </Paragraph>\r\n\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: 'uppercase' }}\r\n          onClick={() => window.open(url, '_blank')} \r\n        >\r\n          upgrade now\r\n        </Button>\r\n      </StyledCard>\r\n    </CardRoot>\r\n   \r\n  );\r\n};\r\n\r\nexport default UpgradeCard;\r\n","import { Card, Grid, styled, useTheme } from '@mui/material';\r\nimport { getDashboardData } from 'app/services/ticketService';\r\nimport { getProfilePic } from 'app/services/userService';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useLocation, useSearchParams } from 'react-router-dom';\r\nimport Campaigns from './shared/Campaigns';\r\nimport DoughnutChart from './shared/Doughnut';\r\nimport RowCards from './shared/RowCards';\r\nimport StatCards from './shared/StatCards';\r\nimport StatCards2 from './shared/StatCards2';\r\nimport TopSellingTable from './shared/TopSellingTable';\r\nimport UpgradeCard from './shared/UpgradeCard';\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n}));\r\n\r\nconst Title = styled('span')(() => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  marginRight: '.5rem',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  marginBottom: '16px',\r\n  textTransform: 'capitalize',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Analytics = () => {\r\n  const { palette } = useTheme();\r\n  let [searchParams] = useSearchParams();\r\n  const searchdata = searchParams.get('updated')\r\n  const [dashboardData, setDashboardData] = useState();\r\n  useEffect(() => {\r\n    fetchDashboardData()\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(searchdata){\r\n      getProfilePic()\r\n    }\r\n  },[searchdata])\r\n  const fetchDashboardData = () => {\r\n\r\n    getDashboardData({}).then((response) => {\r\n      setDashboardData(response?.data);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ContentBox className=\"analytics\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={8} md={8} sm={12} xs={12}>\r\n            <StatCards data={dashboardData} />\r\n            {/* <TopSellingTable />\r\n            <StatCards2 />\r\n\r\n            <H4>Ongoing Projects</H4>\r\n            <RowCards /> */}\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={12} xs={12}>\r\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\r\n              <Title>Your Tickets Statistics </Title>\r\n              <DoughnutChart\r\n                height=\"300px\"\r\n                color={[palette.primary.dark, '#FFAF38']}\r\n                toDoTicketCount={dashboardData?.toDoTicketCount}\r\n                inProgressTicketsCount={dashboardData?.inProgressTicketsCount}\r\n              />\r\n            </Card>\r\n\r\n            <UpgradeCard />\r\n            {/* <Campaigns /> */}\r\n          </Grid>\r\n        </Grid>\r\n      </ContentBox>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"sourceRoot":""}