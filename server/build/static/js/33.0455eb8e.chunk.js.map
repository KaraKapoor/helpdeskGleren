{"version":3,"sources":["app/views/sessions/ForgotPassword.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","padding","background","theme","palette","default","ForgotPasswordRoot","minHeight","maxWidth","margin","borderRadius","ForgotPassword","navigate","useNavigate","useState","email","setEmail","handleFormSubmit","Swal","fire","icon","title","text","showCloseButton","showConfirmButton","width","forgetPasswordEmail","then","resp","status","error","className","container","item","xs","p","src","alt","onSubmit","initialValues","values","handleSubmit","type","name","size","label","variant","onChange","e","target","value","sx","mb","fullWidth","color","onClick","mt"],"mappings":"2OAOMA,EAAUC,YAAOC,IAAPD,EAAY,iBAAO,CACjCE,QAAS,OACTC,WAAY,SACb,IAEKC,EAAaJ,YAAOD,EAAPC,EAAgB,iBAAO,CACxCK,eAAgB,SACjB,IAEKC,EAAaN,YAAOC,IAAPD,EAAY,YAAQ,MAAQ,CAC7CO,QAAS,GACTC,WAFqC,EAALC,MAEdC,QAAQF,WAAWG,QACtC,IAEKC,EAAqBZ,YAAOI,EAAPJ,EAAmB,iBAAO,CACnDQ,WAAY,UACZK,UAAW,mBACX,UAAW,CACTC,SAAU,IACVC,OAAQ,OACRC,aAAc,IAEjB,IAsHcC,UApHQ,WACrB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KAChBC,EAAgB,iDAAG,2FAClBF,EAAM,CAAD,wCACDG,IAAKC,KAAK,CACfC,KAAM,UACNC,MAAO,UACPC,KAAM,qCACNC,iBAAiB,EACjBC,mBAAmB,EACnBC,MAAO,OACP,uBAEIC,YAAoB,CAAEX,MAAOA,IAASY,MAAK,SAACC,GAChD,IAAoB,IAAhBA,EAAKC,OACP,OAAOX,IAAKC,KAAK,CACfC,KAAM,QACNC,MAAO,QACPC,KAAMM,EAAKE,MACXP,iBAAiB,EACjBC,mBAAmB,EACnBC,MAAO,MAGTP,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,UACPC,KAAM,4BACNC,iBAAiB,EACjBC,mBAAmB,EACnBC,MAAO,MACNE,MAAK,WACN,OAAOf,EAAS,2BAClB,GAEJ,IAAG,KAAD,sCAEL,kBAnCqB,mCAqCtB,OACE,cAACN,EAAkB,UACjB,cAAC,IAAI,CAACyB,UAAU,OAAM,SACpB,cAAC,IAAI,CAACC,WAAS,WACb,eAAC,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG,UAChB,cAACpC,EAAU,CAACqC,EAAG,EAAE,SACf,qBACEV,MAAM,MACNW,IAAI,2CACJC,IAAI,OAIR,cAACrC,EAAU,UACT,cAAC,IAAM,CAACsC,SAAUrB,EAAkBsB,cAAe,CAAExB,MAAO,IAAK,SAC9D,YAAS,EAANyB,OAAH,IAAWC,EAAY,EAAZA,aAAY,OACtB,uBAAMH,SAAUG,EAAa,UAC3B,gCACE,cAAC,IAAS,CACRC,KAAK,QACLC,KAAK,QACLC,KAAK,QACLC,MAAM,QAENC,QAAQ,WACPC,SAAU,SAACC,GAAC,aAAKhC,EAAU,OAADgC,QAAC,IAADA,GAAS,QAAR,EAADA,EAAGC,cAAM,WAAR,EAAD,EAAWC,MAAM,EAC5CC,GAAI,CAAEC,GAAI,EAAG3B,MAAO,UAEtB,0BAIF,cAAC,IAAM,CACL4B,WAAS,EACTP,QAAQ,YACRQ,MAAM,UACNZ,KAAK,SAAQ,4BAoBf,cAAC,IAAM,CACLW,WAAS,EACTC,MAAM,UACNR,QAAQ,WACRS,QAAS,kBAAM3C,GAAU,IAAMA,GAAU,EAAE,EAC3CuC,GAAI,CAAEK,GAAI,GAAI,uBAIX,cASzB,C","file":"static/js/33.0455eb8e.chunk.js","sourcesContent":["import { Box, Button, Card, Grid, styled, TextField } from \"@mui/material\";\r\nimport { forgetPasswordEmail } from \"app/services/userService\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Formik } from \"formik\";\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n}));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  padding: 32,\r\n  background: theme.palette.background.default,\r\n}));\r\n\r\nconst ForgotPasswordRoot = styled(JustifyBox)(() => ({\r\n  background: \"#1A2038\",\r\n  minHeight: \"100vh !important\",\r\n  \"& .card\": {\r\n    maxWidth: 800,\r\n    margin: \"1rem\",\r\n    borderRadius: 12,\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const handleFormSubmit = async () => {\r\n    if (!email) {\r\n      return Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Warning\",\r\n        text: \"Please enter your Registered Email\",\r\n        showCloseButton: true,\r\n        showConfirmButton: false,\r\n        width: 400,\r\n      });\r\n    } else {\r\n      await forgetPasswordEmail({ email: email }).then((resp) => {\r\n        if (resp.status === false) {\r\n          return Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: resp.error,\r\n            showCloseButton: true,\r\n            showConfirmButton: false,\r\n            width: 400,\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Reset Password Email Sent\",\r\n            showCloseButton: true,\r\n            showConfirmButton: false,\r\n            width: 400,\r\n          }).then(() => {\r\n            return navigate(\"/session/forgot-password\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ForgotPasswordRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <JustifyBox p={4}>\r\n              <img\r\n                width=\"300\"\r\n                src=\"/assets/images/illustrations/dreamer.svg\"\r\n                alt=\"\"\r\n              />\r\n            </JustifyBox>\r\n\r\n            <ContentBox>\r\n              <Formik onSubmit={handleFormSubmit} initialValues={{ email: \"\" }}>\r\n                {({ values, handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                      <TextField\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        size=\"small\"\r\n                        label=\"Email\"\r\n                        // value={email}\r\n                        variant=\"outlined\"\r\n                         onChange={(e) => setEmail(e?.target?.value)}\r\n                        sx={{ mb: 3, width: \"100%\" }}\r\n                      />\r\n                      <br />\r\n                    </div>\r\n\r\n\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Reset Password\r\n                    </Button>\r\n\r\n\t\t\t\t\t{/* <div>\r\n                      <TextField \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        size=\"small\"\r\n                        label=\"Password\"\r\n                        // value={email}\r\n                        variant=\"outlined\"\r\n                         onChange={(e) => setPassword(e.target.value)}\r\n                        sx={{ mb: 3, width: \"100%\" }}\r\n                      />\r\n                      <br />\r\n                    </div> */}\r\n\t\t\t\t\t\r\n\r\n                    <Button\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => navigate(-1) || navigate(-2) }\r\n                      sx={{ mt: 2 }}\r\n                    >\r\n                      Go Back\r\n                    </Button>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </ContentBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </ForgotPasswordRoot>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"sourceRoot":""}