{"version":3,"sources":["app/views/material-kit/forms/SimpleForm.jsx","app/views/material-kit/forms/StepperForm.jsx","app/views/material-kit/forms/AppForm.jsx"],"names":["TextField","styled","TextValidator","width","marginBottom","SimpleForm","useState","date","Date","state","setState","useEffect","ValidatorForm","addValidationRule","value","password","removeValidationRule","handleChange","event","persist","target","name","username","firstName","creditCard","mobile","confirmPassword","gender","email","onSubmit","onError","Grid","container","spacing","item","lg","md","sm","xs","sx","mt","type","id","onChange","errorMessages","label","validators","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","props","mb","RadioGroup","row","FormControlLabel","labelPlacement","control","Radio","color","Checkbox","Button","variant","Icon","pl","textTransform","getStepContent","stepIndex","StepperForm","React","activeStep","setActiveStep","steps","Stepper","alternativeLabel","map","Step","StepLabel","length","onClick","pt","disabled","prevActiveStep","ml","Container","theme","margin","breakpoints","down","AppForm","Box","className","routeSegments","path","Stack","title"],"mappings":"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","file":"static/js/28.8e42a95a.chunk.js","sourcesContent":["import { DatePicker } from \"@mui/lab\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Icon,\r\n  Radio,\r\n  RadioGroup,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport { Span } from \"app/components/Typography\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n  width: \"100%\",\r\n  marginBottom: \"16px\",\r\n}));\r\n\r\nconst SimpleForm = () => {\r\n  const [state, setState] = useState({ date: new Date() });\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", (value) => {\r\n      if (value !== state.password) return false;\r\n\r\n      return true;\r\n    });\r\n    return () => ValidatorForm.removeValidationRule(\"isPasswordMatch\");\r\n  }, [state.password]);\r\n\r\n  const handleSubmit = (event) => {\r\n    // console.log(\"submitted\");\r\n    // console.log(event);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleDateChange = (date) => setState({ ...state, date });\r\n\r\n  const {\r\n    username,\r\n    firstName,\r\n    creditCard,\r\n    mobile,\r\n    password,\r\n    confirmPassword,\r\n    gender,\r\n    date,\r\n    email,\r\n  } = state;\r\n\r\n  return (\r\n    <div>\r\n      <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n        <Grid container spacing={6}>\r\n          <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"standard-basic\"\r\n              value={username || \"\"}\r\n              onChange={handleChange}\r\n              errorMessages={[\"this field is required\"]}\r\n              label=\"Username (Min length 4, Max length 9)\"\r\n              validators={[\"required\", \"minStringLength: 4\", \"maxStringLength: 9\"]}\r\n            />\r\n\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n              onChange={handleChange}\r\n              value={firstName || \"\"}\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n\r\n            <TextField\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={email || \"\"}\r\n              onChange={handleChange}\r\n              validators={[\"required\", \"isEmail\"]}\r\n              errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n            />\r\n\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={handleDateChange}\r\n                renderInput={(props) => (\r\n                  <TextField\r\n                    {...props}\r\n                    label=\"Date picker\"\r\n                    id=\"mui-pickers-date\"\r\n                    sx={{ mb: 2, width: \"100%\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n\r\n            <TextField\r\n              sx={{ mb: 4 }}\r\n              type=\"number\"\r\n              name=\"creditCard\"\r\n              label=\"Credit Card\"\r\n              onChange={handleChange}\r\n              value={creditCard || \"\"}\r\n              errorMessages={[\"this field is required\"]}\r\n              validators={[\"required\", \"minStringLength:16\", \"maxStringLength: 16\"]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"mobile\"\r\n              value={mobile || \"\"}\r\n              label=\"Mobile Nubmer\"\r\n              onChange={handleChange}\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              value={password || \"\"}\r\n              onChange={handleChange}\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n            <TextField\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              onChange={handleChange}\r\n              label=\"Confirm Password\"\r\n              value={confirmPassword || \"\"}\r\n              validators={[\"required\", \"isPasswordMatch\"]}\r\n              errorMessages={[\"this field is required\", \"password didn't match\"]}\r\n            />\r\n            <RadioGroup\r\n              row\r\n              name=\"gender\"\r\n              sx={{ mb: 2 }}\r\n              value={gender || \"\"}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Male\"\r\n                label=\"Male\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Female\"\r\n                label=\"Female\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Others\"\r\n                label=\"Others\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n            </RadioGroup>\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"I have read and agree to the terms of service.\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n          <Icon>send</Icon>\r\n          <Span sx={{ pl: 1, textTransform: \"capitalize\" }}>Submit</Span>\r\n        </Button>\r\n      </ValidatorForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleForm;\r\n","import { Box } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React from \"react\";\r\n\r\nfunction getSteps() {\r\n  return [\"Select master blaster campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus non tincidunt velit. Quisque laoreet, lectus id tincidunt fringilla, eros est bibendum felis, sit amet lobortis ante sem non diam. Donec viverra a nisi eu eleifend. Mauris vel leo tempor, commodo felis in, sollicitudin velit. Nullam eu sem id lacus venenatis commodo nec a lacus. Donec in egestas justo. Quisque elementum diam felis. In a ullamcorper leo. In lorem urna, mollis in feugiat sed, aliquet nec diam. Mauris tempus dui at gravida pharetra. Etiam nec lectus metus. In dapibus placerat consequat. Quisque ornare ut lacus ac tempus. Pellentesque sed ornare tellus. Curabitur dictum turpis quam, at feugiat mi elementum a.`;\r\n\r\n    case 1:\r\n      return `Integer euismod dapibus sapien, a interdum augue blandit eget. Donec pellentesque, sapien iaculis dignissim sagittis, risus nulla auctor eros, sed suscipit eros mauris id lorem. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Integer porttitor mauris egestas consequat molestie. Nam egestas iaculis malesuada. Praesent sagittis venenatis finibus. Praesent porttitor ipsum et sapien cursus, eu mattis augue ornare.`;\r\n\r\n    case 2:\r\n      return `In laoreet, dui vel tristique facilisis, velit dui dictum diam, nec feugiat mi mauris eu nunc. Nullam auctor eget ante ac laoreet. Aliquam et ante ligula. Nam imperdiet augue magna, ac tincidunt neque mollis nec. Sed eu nunc sit amet tellus commodo elementum non sit amet sem. Etiam ipsum nibh, rutrum vel ultrices in, vulputate ac dolor. Morbi dictum lectus id orci dapibus, et faucibus nulla viverra. Nulla consectetur ex vitae pretium vehicula. Quisque varius tempor erat et semper. Vivamus consectetur, eros sit amet ornare facilisis, nulla felis laoreet tortor, sit amet egestas risus ipsum sed eros.`;\r\n\r\n    default:\r\n      return `Aenean arcu ligula, porttitor id neque imperdiet, congue convallis erat. Integer libero sapien, convallis a vulputate vel, pretium vulputate metus. Donec leo justo, viverra ut tempor commodo, laoreet eu velit. Donec vel sem quis velit pharetra elementum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam in commodo mauris. Ut iaculis ipsum velit.`;\r\n  }\r\n}\r\n\r\nexport default function StepperForm() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n  const handleBack = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  const handleReset = () => setActiveStep(0);\r\n\r\n  return (\r\n    <Box>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      <Box mt={4}>\r\n        {activeStep === steps.length ? (\r\n          <Box>\r\n            <Typography>All steps completed</Typography>\r\n\r\n            <Button sx={{ mt: 2 }} variant=\"contained\" color=\"secondary\" onClick={handleReset}>\r\n              Reset\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Typography>{getStepContent(activeStep)}</Typography>\r\n\r\n            <Box pt={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n              >\r\n                Back\r\n              </Button>\r\n\r\n              <Button sx={{ ml: 2 }} variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Stack } from \"@mui/material\";\r\nimport { Box, styled } from \"@mui/system\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport SimpleForm from \"./SimpleForm\";\r\nimport StepperForm from \"./StepperForm\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst AppForm = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Form\" }]} />\r\n      </Box>\r\n\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"Simple Form\">\r\n          <SimpleForm />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"stepper form\">\r\n          <StepperForm />\r\n        </SimpleCard>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppForm;\r\n"],"sourceRoot":""}