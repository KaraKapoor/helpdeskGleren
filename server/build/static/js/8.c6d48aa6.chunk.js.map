{"version":3,"sources":["../node_modules/@mui/icons-material/Clear.js","app/views/escalations/addEditEscalations.jsx","app/views/escalations/escalationList.jsx","app/views/escalations/escalationView.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AddEditEscalation","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","departments","setDepartments","selectedDepartment","setSelectedDepartment","agents","setAgents","selectedL1","setSelectedL1","selectedL2","setSelectedL2","selectedL3","setSelectedL3","selectedL4","setSelectedL4","selectedL5","setSelectedL5","selectedL6","setSelectedL6","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","ISactiveError","useEffect","getMasterDropdownData","then","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","data","department_id","l1_id","l2_id","l3_id","l4_id","l5_id","l6_id","handleClearClick","handleClearClickforL3","handleClearClickforL4","handleClearClickForL5","handleClearClickForL6","initialValues","departmentId","l1Id","l2Id","l3Id","l4Id","l5Id","l6Id","handleCheckBoxChange","event","target","checked","handleDepartmentChange","handleL1Change","handleL2Change","handleL3Change","handleL4Change","handleL5Change","handleL6Change","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","Strings","DEPARTMENT_NAME_MANDATORY","createEscalationMatrix","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","errors","touched","handleChange","handleBlur","handleSubmit","Grid","container","spacing","item","lg","md","sm","xs","FormControl","fullWidth","InputLabel","required","Select","labelId","label","onChange","defaultValue","className","filter","department","map","i","MenuItem","name","first_name","last_name","display","endAdornment","IconButton","FormControlLabel","control","Checkbox","disabled","LoadingButton","type","variant","my","top","marginRight","marginTop","EscalationsTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","backgroundColor","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","EscalationsList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchEscalationList","getAllEscalations","response","pagingData","assign","sno","totalItems","Box","overflow","Fab","size","rowData","columns","field","e","departmentName","createdAt","moment","format","DATE_FORMAT","updatedAt","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","EscalationView","currentView","useSearchParams","query","setEditDetails","get","split","getEscalationById"],"mappings":"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","file":"static/js/8.c6d48aa6.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;","import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nimport { Formik } from 'formik';\r\nimport './escalationList.css'\r\nimport { Card, Checkbox, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { createEscalationMatrix, getMasterDropdownData } from 'app/services/adminService';\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nconst AddEditEscalation = ({ onClose, editDetails }) => {\r\n  const [valid, setValid] = React.useState(false)\r\n  const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n  const [departments, setDepartments] = React.useState();\r\n  const [selectedDepartment, setSelectedDepartment] = React.useState();\r\n  const [agents, setAgents] = React.useState();\r\n  const [selectedL1, setSelectedL1] = React.useState();\r\n  const [selectedL2, setSelectedL2] = React.useState();\r\n  const [selectedL3, setSelectedL3] = React.useState();\r\n  const [selectedL4, setSelectedL4] = React.useState();\r\n  const [selectedL5, setSelectedL5] = React.useState();\r\n  const [selectedL6, setSelectedL6] = React.useState();\r\n  const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n  const navigate = useNavigate();\r\n\r\n  const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n`\r\n  const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n`\r\n  const MyErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 13px;\r\n`\r\nconst ISactiveError = styled.div`\r\n  width:15px;\r\n  height:15px;\r\n  border:5px solid red;\r\n  background-color:red;\r\n  color:white;\r\n  border-radius:50%;\r\n  text-align:center;\r\n`\r\n\r\n  React.useEffect(() => {\r\n    if (editDetails) {\r\n      {\r\n        setIsActive(editDetails?.is_active);\r\n      }\r\n    }\r\n    getMasterDropdownData().then((resp) => {\r\n      if (resp?.status === false) {\r\n        return Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: resp.error,\r\n          showCloseButton: true,\r\n          showConfirmButton: false,\r\n          width: 400,\r\n        })\r\n      } else {\r\n        setDepartments(resp?.data?.departments);\r\n        setAgents(resp?.data?.agents);\r\n        setSelectedDepartment(editDetails?.department_id);\r\n        setSelectedL1(editDetails?.l1_id);\r\n        setSelectedL2(editDetails?.l2_id);\r\n        setSelectedL3(editDetails?.l3_id);\r\n        setSelectedL4(editDetails?.l4_id);\r\n        setSelectedL5(editDetails?.l5_id);\r\n        setSelectedL6(editDetails?.l6_id);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleClearClick = () => {\r\n    setSelectedL2();\r\n  };\r\n\r\n  const handleClearClickforL3=()=>{\r\n    setSelectedL3();\r\n  }\r\n\r\n const handleClearClickforL4=()=>{\r\n  setSelectedL4();\r\n }\r\n\r\n const handleClearClickForL5=()=>{\r\n  setSelectedL5();\r\n }\r\n\r\n const handleClearClickForL6=()=>{\r\n  setSelectedL6();\r\n }\r\n\r\n  const onSubmit = (values) => {\r\n    const reqBody = {\r\n      departmentId: selectedDepartment,\r\n      l1Id: selectedL1,\r\n      l2Id: selectedL2,\r\n      l3Id: selectedL3,\r\n      l4Id: selectedL4,\r\n      l5Id: selectedL5,\r\n      l6Id: selectedL6,\r\n      is_active: isActive\r\n    };\r\n    if (editDetails?.id) {\r\n      reqBody.id = editDetails.id\r\n    } else if (!selectedDepartment) {\r\n      return Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Warning',\r\n        text: Strings.DEPARTMENT_NAME_MANDATORY,\r\n        showCloseButton: true,\r\n        showConfirmButton: false,\r\n        width: 400,\r\n      })\r\n    }\r\n    createEscalationMatrix(reqBody).then((resp) => {\r\n        if (resp?.status === false) {\r\n            return Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: resp.error,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n            return navigate('/escalations');\r\n        }\r\n\r\n    })\r\n  }\r\n  const initialValues = {\r\n    departmentId: editDetails?.departmentId ? editDetails.departmentId : '',\r\n    l1Id: editDetails?.l1_id ? editDetails.l1_id : '',\r\n    l2Id: editDetails?.l2Id ? editDetails.l2Id : '',\r\n    l3Id: editDetails?.l3Id ? editDetails.l3Id : '',\r\n    l4Id: editDetails?.l4Id ? editDetails.l4Id : '',\r\n    l5Id: editDetails?.l5Id ? editDetails.l5Id : '',\r\n    l6Id: editDetails?.l6Id ? editDetails.l6Id : ''\r\n  }\r\n  const handleCheckBoxChange = (event) => {\r\n    if (event?.target.checked) {\r\n      setIsActive(false);\r\n    } else {\r\n      setIsActive(true);\r\n    }\r\n  }\r\n  const handleDepartmentChange = (event) => {\r\n    setSelectedDepartment(event.target.value);\r\n  }\r\n  const handleL1Change = (event) => {\r\n    setSelectedL1(event.target.value);\r\n  }\r\n  const handleL2Change = (event) => {\r\n    setSelectedL2(event.target.value);\r\n  }\r\n  const handleL3Change = (event) => {\r\n    setSelectedL3(event.target.value);\r\n  }\r\n  const handleL4Change = (event) => {\r\n    setSelectedL4(event.target.value);\r\n  }\r\n  const handleL5Change = (event) => {\r\n    setSelectedL5(event.target.value);\r\n  }\r\n  const handleL6Change = (event) => {\r\n    setSelectedL6(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n          <HeaderTitle>\r\n            <div>\r\n              {editDetails?.id ? 'Edit Escalation' : 'Add Escalation'}\r\n            </div>\r\n            <div onClick={handleClose}>\r\n              <Icon\r\n                sx={{\r\n                  color: '#59B691',\r\n                  fontSize: '35px !important',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                cancelsharp\r\n              </Icon>\r\n            </div>\r\n          </HeaderTitle>\r\n          <Divider />\r\n          <Formik onSubmit={onSubmit} initialValues={initialValues}>\r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <FormContainer>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"department\">Department</InputLabel>\r\n                        <Select\r\n                          labelId=\"department\"\r\n                          id=\"department\"\r\n                          required={true}\r\n                          value={selectedDepartment}\r\n                          label=\"Department\"\r\n                          onChange={handleDepartmentChange}\r\n                          defaultValue={selectedDepartment}\r\n                          className=\"isactiveDivStyle\"\r\n                        >\r\n                          {\r\n                             departments?.filter(department=>department.is_active || department.id === selectedDepartment)?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id} className=\"isactive-error\">{d.name} {d.is_active === false ? <ISactiveError />: \"\"}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"l1User\">Level-1</InputLabel>\r\n                        <Select\r\n                          labelId=\"l1User\"\r\n                          id=\"l1User\"\r\n                          required={true}\r\n                          value={selectedL1}\r\n                          label=\"Level-1\"\r\n                          onChange={handleL1Change}\r\n                          defaultValue={selectedL1}\r\n                        >\r\n                          {\r\n                            agents?.filter(data=>data.is_active).map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l2User\">Level-2</InputLabel>\r\n                        <Select\r\n                          labelId=\"l2User\"\r\n                          id=\"l2User\"\r\n                          value={selectedL2}\r\n                          label=\"Level-2\"\r\n                          onChange={handleL2Change}\r\n                          defaultValue={selectedL2}\r\n                          sx={{\"& .MuiSelect-iconOutlined\": {display: selectedL2? 'none': ''}, \"&.Mui-focused .MuiIconButton-root\": {color: 'primary.main'}}}\r\n                          endAdornment={<IconButton sx={{display: selectedL2? \"\": \"none\"}} onClick={handleClearClick}><ClearIcon/></IconButton>}\r\n                        >\r\n                          {\r\n                            agents?.filter(data=>data.is_active).map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l3User\">Level-3</InputLabel>\r\n                        <Select\r\n                          labelId=\"l3User\"\r\n                          id=\"l3User\"\r\n                          value={selectedL3}\r\n                          label=\"Level-3\"\r\n                          onChange={handleL3Change}\r\n                          defaultValue={selectedL3}\r\n                          sx={{\"& .MuiSelect-iconOutlined\": {display: selectedL3? 'none': ''}, \"&.Mui-focused .MuiIconButton-root\": {color: 'primary.main'}}}\r\n                          endAdornment={<IconButton sx={{display: selectedL3? \"\": \"none\"}} onClick={handleClearClickforL3}><ClearIcon/></IconButton>}\r\n                        >\r\n                          {\r\n                            agents?.filter(data=>data.is_active).map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l4User\">Level-4</InputLabel>\r\n                        <Select\r\n                          labelId=\"l4User\"\r\n                          id=\"l4User\"\r\n                          value={selectedL4}\r\n                          label=\"Level-4\"\r\n                          onChange={handleL4Change}\r\n                          defaultValue={selectedL4}\r\n                          sx={{\"& .MuiSelect-iconOutlined\": {display: selectedL4? 'none': ''}, \"&.Mui-focused .MuiIconButton-root\": {color: 'primary.main'}}}\r\n                          endAdornment={<IconButton sx={{display: selectedL4? \"\": \"none\"}} onClick={handleClearClickforL4}><ClearIcon/></IconButton>}\r\n                        >\r\n                          {\r\n                            agents?.filter(data=>data.is_active).map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l5User\">Level-5</InputLabel>\r\n                        <Select\r\n                          labelId=\"l5User\"\r\n                          id=\"l5User\"\r\n                          value={selectedL5}\r\n                          label=\"Level-5\"\r\n                          onChange={handleL5Change}\r\n                          defaultValue={selectedL5}\r\n                          sx={{\"& .MuiSelect-iconOutlined\": {display: selectedL5? 'none': ''}, \"&.Mui-focused .MuiIconButton-root\": {color: 'primary.main'}}}\r\n                          endAdornment={<IconButton sx={{display: selectedL5? \"\": \"none\"}} onClick={handleClearClickForL5}><ClearIcon/></IconButton>}\r\n                        >\r\n                          {\r\n                            agents?.filter(data=>data.is_active).map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l6User\">Level-6</InputLabel>\r\n                        <Select\r\n                          labelId=\"l6User\"\r\n                          id=\"l6User\"\r\n                          value={selectedL6}\r\n                          label=\"Level-6\"\r\n                          onChange={handleL6Change}\r\n                          defaultValue={selectedL6}\r\n                          sx={{\"& .MuiSelect-iconOutlined\": {display: selectedL6? 'none': ''}, \"&.Mui-focused .MuiIconButton-root\": {color: 'primary.main'}}}\r\n                          endAdornment={<IconButton sx={{display: selectedL6? \"\": \"none\"}} onClick={handleClearClickForL6}><ClearIcon/></IconButton>}\r\n                        >\r\n                          {\r\n                            agents?.filter(data=>data.is_active).map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControlLabel control={<Checkbox />}\r\n                        disabled={!editDetails?.id}\r\n                        checked={!isActive}\r\n                        onChange={handleCheckBoxChange}\r\n                        label=\"Inactive\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </FormContainer>\r\n                <div className='d-flex justify-content-end'>\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ my: 2, top: \"50\", marginRight: \"10px\", marginTop: \"15vh\" }}\r\n                  >\r\n                    Submit\r\n                  </LoadingButton>\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n          </Formik>\r\n        </Card>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddEditEscalation\r\n","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./escalationList.css\";\r\n  import { useEffect, useState } from \"react\";\r\nimport { getAllEscalations } from \"app/services/adminService\";\r\nimport { Strings } from \"config/strings\";\r\nimport moment from \"moment\";\r\n  \r\n  const StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }));\r\n  const EscalationsTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    \"thead\":{\r\n        backgroundColor:\"rgb(34, 42, 69)\"\r\n      },\r\n      \"thead > tr\":{\r\n        backgroundColor:\"rgb(34, 42, 69)\"\r\n      },\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, 1)\",\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:nth-of-type(5)': {\r\n        width: '90px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const EscalationsList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchEscalationList()\r\n    }, [page])\r\n  \r\n    const fetchEscalationList = () => {\r\n        getAllEscalations(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <EscalationsTable>\r\n            <MaterialTable\r\n                        title=\"Escalations\"\r\n                        columns={[\r\n                            { title: 'Department Name', field: 'departmentName'},\r\n                            { title: 'Active', field: 'status'},\r\n                            { title: 'Created At', field: 'createdAt'},\r\n                            { title: 'Updated At', field: 'updatedAt'},\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            return {\r\n                                id: e.id,\r\n                                departmentName: e?.department?.name,\r\n                                l1Id: e.l1_id,\r\n                                status: e.is_active,\r\n                                createdAt: moment(e.createdAt).format(Strings.DATE_FORMAT),\r\n                                updatedAt: moment(e.updatedAt).format(Strings.DATE_FORMAT)\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit Escalations',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.id)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </EscalationsTable>\r\n  \r\n  \r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default EscalationsList;\r\n  ","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { getEscalationById } from \"app/services/adminService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditEscalation from \"./addEditEscalations\";\r\nimport EscalationsList from \"./escalationList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\n\r\nconst EscalationView = () => {\r\n    const [currentView, setCurrentView] = useState('Escalation');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-escalation') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-escalation') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Escalation')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = async(id) => {\r\n        await getEscalationById({id:id}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-escalation/${id}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-escalation`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Escalation' && (\r\n                    <EscalationsList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditEscalation\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditEscalation\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EscalationView"],"sourceRoot":""}