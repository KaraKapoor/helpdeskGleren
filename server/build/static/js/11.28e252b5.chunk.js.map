{"version":3,"sources":["app/views/bugReport/bugReport.jsx","app/views/bugReport/bugReportView.jsx"],"names":["BugReport","props","useState","issueDescription","setIssueDescription","navigate","useNavigate","Box","width","overflow","className","TextareaAutosize","type","style","outline","borderRadius","name","placeholder","id","value","onChange","event","target","minRows","label","LoadingButton","onClick","Swal","fire","icon","title","text","showCloseButton","showConfirmButton","formData","reportBug","then","data","status","error","e","console","log","color","variant","sx","mb","mt","ContentBox","styled","theme","margin","breakpoints","down","BugReportView","Grid","container","spacing","item","lg","md","sm","xs"],"mappings":"oPA6EeA,EArEG,SAACC,GACf,MAAgDC,qBAAU,mBAAnDC,EAAgB,KAAEC,EAAmB,KACtCC,EAAWC,cAiDjB,OACI,eAACC,EAAA,EAAG,CAACC,MAAM,OAAOC,SAAS,OAAM,UAC7B,uBAAOC,UAAU,mBAAkB,+BAA0B,uBAC7D,cAACC,EAAA,EAAgB,CACfC,KAAK,WACLC,MAAO,CAAEL,MAAO,OAAOM,QAAQ,OAAOC,aAAa,OACnDC,KAAK,mBACLC,YAAY,0DACZC,GAAG,iBACHC,MAAOhB,EACPiB,SA1DW,SAACC,GAClBjB,EAAoBiB,EAAMC,OAAOH,MACnC,EAyDQI,QAAS,GACTC,MAAM,mDAER,cAACC,EAAA,EAAa,CAACb,KAAK,SAASc,QA1DrB,WACZ,IAAKvB,EACD,OAAOwB,IAAKC,KAAK,CACbC,KAAM,UACNC,MAAO,UACPC,KAAM,sCACNC,iBAAiB,EACjBC,mBAAmB,EACnBzB,MAAO,MAGf,IACI,IAAM0B,EAAS,CACX,iBAAmB/B,GAEvBgC,YAAUD,GAAUE,MAAK,SAACC,GACtB,OAAoB,IAAhBA,EAAKC,OACEX,IAAKC,KAAK,CACbC,KAAM,QACNC,MAAO,QACPC,KAAMM,EAAKE,MACXP,iBAAiB,EACjBC,mBAAmB,EACnBzB,MAAO,OAGXmB,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,UACPC,KAAM,4BACNC,iBAAiB,EACjBC,mBAAmB,EACnBzB,MAAO,MAEXH,EAAS,sBACF,KAGf,GAGJ,CAFE,MAAOmC,GACLC,QAAQC,IAAIF,EAChB,CACJ,EAgByDG,MAAM,UAAUC,QAAQ,YAAYC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAI,sBAGtH,ECtEMC,EAAaC,YAAO,MAAPA,EAAc,gBAAGC,EAAK,EAALA,MAAK,oBACrCC,OAAQ,QACPD,EAAME,YAAYC,KAAK,MAAQ,CAC5BF,OAAQ,QACX,IAkBUG,UAdO,WAClB,OACI,cAAC,WAAQ,UACL,cAACN,EAAU,UACP,cAACO,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,SACvB,cAACF,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,SACtC,cAAC,EAAS,WAMlC,C","file":"static/js/11.28e252b5.chunk.js","sourcesContent":["import { LoadingButton } from \"@mui/lab\";\r\nimport { Box, FormControlLabel, TextareaAutosize } from \"@mui/material\";\r\nimport { reportBug } from \"app/services/adminService\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport './bugReport.css';\r\n\r\nconst BugReport = (props) => {\r\n    const [issueDescription, setIssueDescription] = useState();\r\n    const navigate = useNavigate();\r\n    const handleChange = (event) => {\r\n        setIssueDescription(event.target.value);\r\n      };\r\n    \r\n    const submitBug=()=>{\r\n        if (!issueDescription) {\r\n            return Swal.fire({\r\n                icon: 'warning',\r\n                title: 'Warning',\r\n                text: \"Please enter your Issue Description\",\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n        }\r\n        try {\r\n            const formData={\r\n                \"issueDescription\":issueDescription\r\n            }\r\n            reportBug(formData).then((data)=>{\r\n                if (data.status === false) {\r\n                    return Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: data.error,\r\n                        showCloseButton: true,\r\n                        showConfirmButton: false,\r\n                        width: 400,\r\n                    })\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success',\r\n                        text: \"Bug Reported Successfully\",\r\n                        showCloseButton: true,\r\n                        showConfirmButton: false,\r\n                        width: 400,\r\n                    })\r\n                    navigate('/dashboard/default')\r\n                    return null;\r\n    \r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <label className=\"issueDescription\">Issue Description</label><br></br>\r\n            <TextareaAutosize\r\n              type=\"textarea\"\r\n              style={{ width: '100%',outline:'none',borderRadius:\"5px\" }}\r\n              name=\"issueDescription\"\r\n              placeholder=\"Please tell us in some words which issue you are facing\"\r\n              id=\"standard-basic\"\r\n              value={issueDescription}\r\n              onChange={handleChange}\r\n              minRows={20}\r\n              label=\"Issue Description (Min length 4, Max length 9)\"\r\n            />\r\n            <LoadingButton type=\"submit\" onClick={submitBug} color=\"primary\" variant=\"contained\" sx={{ mb: 2, mt: 3 }}>Submit</LoadingButton>\r\n        </Box>\r\n    )\r\n}\r\nexport default BugReport;","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { Fragment, useState } from \"react\"\r\nimport BugReport from \"./bugReport\"\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\n\r\nconst BugReportView = () => {\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <BugReport></BugReport>\r\n                    </Grid>\r\n                </Grid>\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BugReportView"],"sourceRoot":""}