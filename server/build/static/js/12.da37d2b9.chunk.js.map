{"version":3,"sources":["app/views/escalations/addEditEscalations.jsx","app/views/escalations/escalationList.jsx","app/views/escalations/escalationView.jsx"],"names":["AddEditEscalation","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","departments","setDepartments","selectedDepartment","setSelectedDepartment","agents","setAgents","selectedL1","setSelectedL1","selectedL2","setSelectedL2","selectedL3","setSelectedL3","selectedL4","setSelectedL4","selectedL5","setSelectedL5","selectedL6","setSelectedL6","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","useEffect","getMasterDropdownData","then","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","data","department_id","l1_id","l2_id","l3_id","l4_id","l5_id","l6_id","initialValues","departmentId","l1Id","l2Id","l3Id","l4Id","l5Id","l6Id","handleCheckBoxChange","event","target","checked","handleDepartmentChange","value","handleL1Change","handleL2Change","handleL3Change","handleL4Change","handleL5Change","handleL6Change","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","Strings","DEPARTMENT_NAME_MANDATORY","createEscalationMatrix","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","errors","touched","handleChange","handleBlur","handleSubmit","Grid","container","spacing","item","lg","md","sm","xs","FormControl","fullWidth","InputLabel","required","Select","labelId","label","onChange","defaultValue","map","d","i","MenuItem","name","first_name","last_name","FormControlLabel","control","Checkbox","disabled","className","LoadingButton","type","variant","my","top","marginRight","marginTop","EscalationsTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","EscalationsList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchEscalationList","getAllEscalations","response","pagingData","Object","assign","sno","totalItems","Box","overflow","Fab","size","rowData","columns","field","e","departmentName","department","createdAt","moment","format","DATE_FORMAT","updatedAt","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","backgroundColor","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","EscalationView","currentView","useSearchParams","query","setEditDetails","get","split","getEscalationById"],"mappings":"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","file":"static/js/12.da37d2b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nimport { Formik } from 'formik';\r\nimport './escalationList.css'\r\nimport { Card, Checkbox, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { createEscalationMatrix, getMasterDropdownData } from 'app/services/adminService';\r\n\r\nconst AddEditEscalation = ({ onClose, editDetails }) => {\r\n  const [valid, setValid] = React.useState(false)\r\n  const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n  const [departments, setDepartments] = React.useState();\r\n  const [selectedDepartment, setSelectedDepartment] = React.useState();\r\n  const [agents, setAgents] = React.useState();\r\n  const [selectedL1, setSelectedL1] = React.useState();\r\n  const [selectedL2, setSelectedL2] = React.useState();\r\n  const [selectedL3, setSelectedL3] = React.useState();\r\n  const [selectedL4, setSelectedL4] = React.useState();\r\n  const [selectedL5, setSelectedL5] = React.useState();\r\n  const [selectedL6, setSelectedL6] = React.useState();\r\n  const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n  const navigate = useNavigate();\r\n\r\n  const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n`\r\n  const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n`\r\n  const MyErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 13px;\r\n`\r\n\r\n  React.useEffect(() => {\r\n    if (editDetails) {\r\n      {\r\n        setIsActive(editDetails?.is_active);\r\n      }\r\n    }\r\n    getMasterDropdownData().then((resp) => {\r\n      if (resp?.status === false) {\r\n        return Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: resp.error,\r\n          showCloseButton: true,\r\n          showConfirmButton: false,\r\n          width: 400,\r\n        })\r\n      } else {\r\n        setDepartments(resp?.data?.departments);\r\n        setAgents(resp?.data?.agents);\r\n        setSelectedDepartment(editDetails?.department_id);\r\n        setSelectedL1(editDetails?.l1_id);\r\n        setSelectedL2(editDetails?.l2_id);\r\n        setSelectedL3(editDetails?.l3_id);\r\n        setSelectedL4(editDetails?.l4_id);\r\n        setSelectedL5(editDetails?.l5_id);\r\n        setSelectedL6(editDetails?.l6_id);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const onSubmit = (values) => {\r\n    const reqBody = {\r\n      departmentId: selectedDepartment,\r\n      l1Id: selectedL1,\r\n      l2Id: selectedL2,\r\n      l3Id: selectedL3,\r\n      l4Id: selectedL4,\r\n      l5Id: selectedL5,\r\n      l6Id: selectedL6,\r\n      is_active: isActive\r\n    };\r\n    if (editDetails?.id) {\r\n      reqBody.id = editDetails.id\r\n    } else if (!selectedDepartment) {\r\n      return Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Warning',\r\n        text: Strings.DEPARTMENT_NAME_MANDATORY,\r\n        showCloseButton: true,\r\n        showConfirmButton: false,\r\n        width: 400,\r\n      })\r\n    }\r\n    createEscalationMatrix(reqBody).then((resp) => {\r\n        if (resp?.status === false) {\r\n            return Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: resp.error,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n            return navigate('/escalations');\r\n        }\r\n\r\n    })\r\n  }\r\n  const initialValues = {\r\n    departmentId: editDetails?.departmentId ? editDetails.departmentId : '',\r\n    l1Id: editDetails?.l1_id ? editDetails.l1_id : '',\r\n    l2Id: editDetails?.l2Id ? editDetails.l2Id : '',\r\n    l3Id: editDetails?.l3Id ? editDetails.l3Id : '',\r\n    l4Id: editDetails?.l4Id ? editDetails.l4Id : '',\r\n    l5Id: editDetails?.l5Id ? editDetails.l5Id : '',\r\n    l6Id: editDetails?.l6Id ? editDetails.l6Id : ''\r\n  }\r\n  const handleCheckBoxChange = (event) => {\r\n    if (event?.target.checked) {\r\n      setIsActive(false);\r\n    } else {\r\n      setIsActive(true);\r\n    }\r\n  }\r\n  const handleDepartmentChange = (event) => {\r\n    setSelectedDepartment(event.target.value);\r\n  }\r\n  const handleL1Change = (event) => {\r\n    setSelectedL1(event.target.value);\r\n  }\r\n  const handleL2Change = (event) => {\r\n    setSelectedL2(event.target.value);\r\n  }\r\n  const handleL3Change = (event) => {\r\n    setSelectedL3(event.target.value);\r\n  }\r\n  const handleL4Change = (event) => {\r\n    setSelectedL4(event.target.value);\r\n  }\r\n  const handleL5Change = (event) => {\r\n    setSelectedL5(event.target.value);\r\n  }\r\n  const handleL6Change = (event) => {\r\n    setSelectedL6(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n          <HeaderTitle>\r\n            <div>\r\n              {editDetails?.id ? 'Edit Escalation' : 'Add Escalation'}\r\n            </div>\r\n            <div onClick={handleClose}>\r\n              <Icon\r\n                sx={{\r\n                  color: '#59B691',\r\n                  fontSize: '35px !important',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                cancelsharp\r\n              </Icon>\r\n            </div>\r\n          </HeaderTitle>\r\n          <Divider />\r\n          <Formik onSubmit={onSubmit} initialValues={initialValues}>\r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <FormContainer>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"department\">Department</InputLabel>\r\n                        <Select\r\n                          labelId=\"department\"\r\n                          id=\"department\"\r\n                          required={true}\r\n                          value={selectedDepartment}\r\n                          label=\"Department\"\r\n                          onChange={handleDepartmentChange}\r\n                          defaultValue={selectedDepartment}\r\n                        >\r\n                          {\r\n                            departments?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"l1User\">Level-1</InputLabel>\r\n                        <Select\r\n                          labelId=\"l1User\"\r\n                          id=\"l1User\"\r\n                          required={true}\r\n                          value={selectedL1}\r\n                          label=\"Level-1\"\r\n                          onChange={handleL1Change}\r\n                          defaultValue={selectedL1}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l2User\">Level-2</InputLabel>\r\n                        <Select\r\n                          labelId=\"l2User\"\r\n                          id=\"l2User\"\r\n                          value={selectedL2}\r\n                          label=\"Level-2\"\r\n                          onChange={handleL2Change}\r\n                          defaultValue={selectedL2}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l3User\">Level-3</InputLabel>\r\n                        <Select\r\n                          labelId=\"l3User\"\r\n                          id=\"l3User\"\r\n                          value={selectedL3}\r\n                          label=\"Level-3\"\r\n                          onChange={handleL3Change}\r\n                          defaultValue={selectedL3}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l4User\">Level-4</InputLabel>\r\n                        <Select\r\n                          labelId=\"l4User\"\r\n                          id=\"l4User\"\r\n                          value={selectedL4}\r\n                          label=\"Level-4\"\r\n                          onChange={handleL4Change}\r\n                          defaultValue={selectedL4}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l5User\">Level-5</InputLabel>\r\n                        <Select\r\n                          labelId=\"l5User\"\r\n                          id=\"l5User\"\r\n                          value={selectedL5}\r\n                          label=\"Level-5\"\r\n                          onChange={handleL5Change}\r\n                          defaultValue={selectedL5}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"l6User\">Level-6</InputLabel>\r\n                        <Select\r\n                          labelId=\"l6User\"\r\n                          id=\"l6User\"\r\n                          value={selectedL6}\r\n                          label=\"Level-6\"\r\n                          onChange={handleL6Change}\r\n                          defaultValue={selectedL6}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControlLabel control={<Checkbox />}\r\n                        disabled={!editDetails?.id}\r\n                        checked={!isActive}\r\n                        onChange={handleCheckBoxChange}\r\n                        label=\"Inactive\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </FormContainer>\r\n                <div className='d-flex justify-content-end'>\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ my: 2, top: \"50\", marginRight: \"10px\", marginTop: \"15vh\" }}\r\n                  >\r\n                    Submit\r\n                  </LoadingButton>\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n          </Formik>\r\n        </Card>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddEditEscalation\r\n","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./escalationList.css\";\r\n  import { useEffect, useState } from \"react\";\r\nimport { getAllEscalations } from \"app/services/adminService\";\r\nimport { Strings } from \"config/strings\";\r\nimport moment from \"moment\";\r\n  \r\n  const StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }));\r\n  const EscalationsTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: 'none',\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const EscalationsList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchEscalationList()\r\n    }, [page])\r\n  \r\n    const fetchEscalationList = () => {\r\n        getAllEscalations(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <EscalationsTable>\r\n            <MaterialTable\r\n                        title=\"Escalations\"\r\n                        columns={[\r\n                            { title: 'Department Name', field: 'departmentName'},\r\n                            { title: 'Active', field: 'status'},\r\n                            { title: 'Created At', field: 'createdAt'},\r\n                            { title: 'Updated At', field: 'updatedAt'},\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            return {\r\n                                id: e.id,\r\n                                departmentName: e?.department?.name,\r\n                                l1Id: e.l1_id,\r\n                                status: e.is_active,\r\n                                createdAt: moment(e.createdAt).format(Strings.DATE_FORMAT),\r\n                                updatedAt: moment(e.updatedAt).format(Strings.DATE_FORMAT)\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit Escalations',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.id)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </EscalationsTable>\r\n  \r\n  \r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default EscalationsList;\r\n  ","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { getEscalationById } from \"app/services/adminService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditEscalation from \"./addEditEscalations\";\r\nimport EscalationsList from \"./escalationList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\n\r\nconst EscalationView = () => {\r\n    const [currentView, setCurrentView] = useState('Escalation');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-escalation') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-escalation') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Escalation')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = async(id) => {\r\n        await getEscalationById({id:id}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-escalation/${id}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-escalation`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Escalation' && (\r\n                    <EscalationsList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditEscalation\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditEscalation\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EscalationView"],"sourceRoot":""}