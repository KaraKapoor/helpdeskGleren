{"version":3,"sources":["app/views/holidays/addEditHoliday.jsx","app/views/holidays/holidayList.jsx","app/views/holidays/holidayView.js"],"names":["AddEditHoliday","onClose","editDetails","React","useState","setValid","ProjectValue","setProjectValue","Project","setProject","is_active","isActive","setIsActive","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","useEffect","project_id","getMasterDropdownData","then","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","data","projects","validationSchema","Yup","shape","holidayName","max","initialValues","holiday_name","holidayDate","holiday_date","handleCheckBoxChange","event","target","checked","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","moment","format","Strings","DATE_HOLIDAYS_FORMAT","projectId","HOLIDAY_NAME_MANDATORY","createHolidays","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","name","type","label","variant","onBlur","value","onChange","Boolean","helperText","InputLabelProps","shrink","FormControl","InputLabel","required","Select","labelId","w","defaultValue","filter","d","i","map","console","log","MenuItem","FormControlLabel","control","Checkbox","disabled","className","LoadingButton","my","top","marginRight","marginTop","HolidaysTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","HolidaysList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchHolidayList","getAllHolidays","response","pagingData","Object","assign","sno","totalItems","Box","overflow","Fab","rowData","columns","field","e","holidayId","project","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","backgroundColor","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","palette","secondary","marginBottom","HolidayView","currentView","useSearchParams","query","setEditDetails","get","split","getHolidayById"],"mappings":"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","file":"static/js/14.3d09a3a6.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport { Formik } from 'formik';\r\nimport './holidayList.css'\r\nimport { Card, Checkbox, Divider, FormControl, FormControlLabel, Icon, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { createHolidays, getMasterDropdownData } from 'app/services/adminService';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\n\r\nconst AddEditHoliday = ({ onClose, editDetails }) => {\r\n    const [valid, setValid] = React.useState(false)\r\n    const [ProjectValue, setProjectValue] = React.useState([]);\r\n    const [Project, setProject] = React.useState();\r\n    const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n    const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n    const navigate = useNavigate();\r\n\r\n    const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n`\r\n    const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n`\r\n    const MyErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 13px;\r\n`\r\nuseEffect(() => {\r\n    if (editDetails) {\r\n      {\r\n        setIsActive(editDetails?.is_active);\r\n        setProject(editDetails?.project_id);\r\n      }\r\n    }\r\n    getMasterDropdownData()?.then((resp) => {\r\n      if (resp?.status === false) {\r\n        return Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Error hi\",\r\n          text: resp.error,\r\n          showCloseButton: true,\r\n          showConfirmButton: false,\r\n          width: 400,\r\n        });\r\n      } else {\r\n        setProjectValue(resp?.data?.projects);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        holidayName: Yup.string()\r\n          .max(20, 'Holiday Name can not be more than 20 characters long'),\r\n      });\r\n\r\n    const onSubmit = (values) => {\r\n        const reqBody = {\r\n            holidayName: values.holidayName,\r\n            holidayDate: values.holidayDate!==null?moment(values.holidayDate).format(Strings.DATE_HOLIDAYS_FORMAT):\"/\",\r\n            is_active: isActive,\r\n            projectId: Project,\r\n        };\r\n         if (editDetails?.id) {\r\n             reqBody.id = editDetails.id\r\n         } else if (!values.holidayName) {\r\n             return Swal.fire({\r\n                 icon: 'warning',\r\n                 title: 'Warning',\r\n                 text: Strings.HOLIDAY_NAME_MANDATORY,\r\n                 showCloseButton: true,\r\n                 showConfirmButton: false,\r\n                 width: 400,\r\n             })\r\n         }\r\n        createHolidays(reqBody).then((resp) => {\r\n            if (resp?.status === false) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: resp.error,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n            })\r\n              return navigate('/holidays');\r\n            }\r\n\r\n        })\r\n    }\r\n    const initialValues = {\r\n        holidayName: editDetails?.holiday_name ? editDetails.holiday_name : '',\r\n        holidayDate: editDetails?.holiday_date ? editDetails.holiday_date: ''\r\n        \r\n    }\r\n    const handleCheckBoxChange = (event) => {\r\n        if (event?.target.checked) {\r\n            setIsActive(false);\r\n        } else {\r\n            setIsActive(true);\r\n        }\r\n    }\r\n    const handleHolidays = (event) => {\r\n        setProject(event.target.value);\r\n      };\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '40vh' }}>\r\n                    <HeaderTitle>\r\n                        <div>\r\n                            {editDetails?.id ? 'Edit Holiday' : 'Add Holiday'}\r\n                        </div>\r\n                        <div onClick={handleClose}>\r\n                            <Icon\r\n                                sx={{\r\n                                    color: '#59B691',\r\n                                    fontSize: '35px !important',\r\n                                    cursor: 'pointer',\r\n                                }}\r\n                            >\r\n                                cancelsharp\r\n                            </Icon>\r\n                        </div>\r\n                    </HeaderTitle>\r\n                    <Divider />\r\n                    <Formik\r\n                        onSubmit={onSubmit}\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <FormContainer divide={true}>\r\n                                    <div>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            size=\"large\"\r\n                                            name=\"holidayName\"\r\n                                            type=\"text\"\r\n                                            label=\"Holiday Name\"\r\n                                            variant=\"outlined\"\r\n                                            onBlur={handleBlur}\r\n                                            value={values.holidayName}\r\n                                            onChange={handleChange}\r\n                                            error={Boolean(errors.holidayName && touched.holidayName)}\r\n                                            helperText={touched.holidayName && errors.holidayName}\r\n                                            sx={{ mb: 1.5 }}\r\n                                        />\r\n                                        <br />\r\n                                        \r\n                                        <TextField\r\n                                            fullWidth\r\n                                            size=\"large\"\r\n                                            name=\"holidayDate\"\r\n                                            type=\"date\"\r\n                                            label=\"holiday_date\"\r\n                                            variant=\"outlined\"\r\n                                            onBlur={handleBlur}\r\n                                            value={values.holidayDate}\r\n                                            onChange={handleChange}\r\n                                            error={Boolean(errors.holidayDate && touched.holidayDate)}\r\n                                            helperText={touched.holidayDate && errors.holidayDate}\r\n                                            sx={{ mb: 1.5 }}\r\n\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                        <br />\r\n                                    </div>  \r\n                                    <div>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel required={true} id=\"projects\">\r\n                        Projects\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"projects\"\r\n                        id=\"projects\"\r\n                        required={true}\r\n                        value={Project}\r\n                        label=\"Project Name\"\r\n                        onChange={(w) => handleHolidays(w)}\r\n                        defaultValue={Project}\r\n                      >\r\n                        {ProjectValue?.filter(\r\n                          (d, i) => d.is_active === true\r\n                        ).map((d, i) => {\r\n                          console.log(ProjectValue,\"hshshs\")\r\n                          return (\r\n                            <MenuItem key={i} value={d.id}>\r\n                              {d.name}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>             \r\n                      <div>\r\n                                <FormControlLabel\r\n                                            control={<Checkbox />}\r\n                                            disabled={!editDetails?.id}\r\n                                            checked={!isActive}\r\n                                            onChange={handleCheckBoxChange}\r\n                                            label=\"Inactive\"\r\n                                        />\r\n                                    </div>\r\n                                </FormContainer>\r\n                                <div className='d-flex justify-content-end'>\r\n                                    <LoadingButton\r\n                                        type=\"submit\"\r\n                                        color=\"primary\"\r\n                                        variant=\"contained\"\r\n                                        sx={{ my: 2, top: \"100\", marginRight: \"10px\", marginTop: \"45vh\" }}\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </Card>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEditHoliday","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./holidayList.css\";\r\n  import moment from \"moment\";\r\n  import { Strings } from \"config/strings\";\r\n  import { useEffect, useState } from \"react\";\r\n  import { getAllHolidays } from \"app/services/adminService\";\r\n\r\n  const StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }));\r\n  const HolidaysTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: 'none',\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:nth-of-type(3)': {\r\n        width: '90px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const HolidaysList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchHolidayList()\r\n    }, [page])\r\n  \r\n    const fetchHolidayList = () => {\r\n        getAllHolidays(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <HolidaysTable>\r\n            <MaterialTable\r\n                        title=\"Holidays\"\r\n                        columns={[\r\n                            { title: 'Holiday Name', field: 'holidayName'},\r\n                            { title: 'Holiday Date', field: 'holidayDate'},\r\n                            { title: 'Active', field: 'status'},\r\n                            { title: 'Project', field:'project'}\r\n\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            console.log(e)\r\n                            return {\r\n                                holidayName: e.holiday_name,\r\n                                holidayDate : e.holiday_date!==null?moment(e.holiday_date).format(Strings.DATE_HOLIDAYS_FORMAT):\"-\",\r\n                                status: e.is_active,\r\n                                holidayId: e.id,\r\n                                projectId: e.project_id,\r\n                                project: e.project?.name\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit Holiday',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.holidayId)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </HolidaysTable>\r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default HolidaysList;\r\n  ","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { getHolidayById } from \"app/services/adminService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditHoliday from \"./addEditHoliday\";\r\nimport HolidaysList from \"./holidayList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst Title = styled('span')(() => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    marginBottom: '16px',\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst HolidayView = () => {\r\n    const [currentView, setCurrentView] = useState('Holiday');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-holiday') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-holiday') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Holiday')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = async(holidayId) => {\r\n        await getHolidayById({id:holidayId}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-holiday/${holidayId}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-holiday`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Holiday' && (\r\n                    <HolidaysList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditHoliday\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditHoliday\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HolidayView;"],"sourceRoot":""}