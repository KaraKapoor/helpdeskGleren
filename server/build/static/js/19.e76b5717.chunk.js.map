{"version":3,"sources":["app/views/users/addEditUser.jsx","app/views/users/userList.jsx","app/views/users/userView.js"],"names":["AddEditUser","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","authRoles","user","role","setSelectedRole","setMasterDropdownData","departments","setDepartments","selectedDepartment","setSelectedDepartment","HeaderTitle","useNavigate","styled","div","FormContainer","props","divide","validationSchema","Yup","shape","designation","max","firstName","required","lastName","useEffect","admin","teamLead","agent","initialValues","first_name","last_name","email","mobile","departmentId","department_id","onChangeRole","event","target","value","handleCheckBoxChange","checked","getMasterDropdownData","then","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","data","handleDepartmentChange","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","active","toString","createUpdateUser","Strings","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","setTimeout","window","location","href","errors","touched","handleChange","handleBlur","handleSubmit","Grid","container","spacing","item","lg","md","sm","xs","TextField","fullWidth","size","name","type","label","variant","onBlur","Boolean","helperText","onChange","disabled","FormControl","InputLabel","Select","labelId","defaultValue","MenuItem","filter","department","map","d","i","FormControlLabel","control","Checkbox","className","LoadingButton","my","top","marginRight","marginTop","UsersTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","backgroundColor","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","UsersList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchUsersList","getAllUsers","response","pagingData","Object","assign","sno","totalItems","Box","overflow","Fab","rowData","columns","field","e","userId","projectId","loginDate","last_login_dt","moment","format","DATE_FORMAT","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","palette","secondary","marginBottom","UserView","currentView","navigate","useSearchParams","query","setEditDetails","get","split","getUserById"],"mappings":"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","file":"static/js/19.e76b5717.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nimport { Formik } from 'formik';\r\nimport './userList.css'\r\nimport { Card, Checkbox, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, MenuItem, Select, TextField }\r\n  from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { authRoles } from 'app/auth/authRoles';\r\nimport { createUpdateUser } from 'app/services/userService';\r\nimport { getMasterDropdownData } from 'app/services/adminService';\r\nimport * as Yup from 'yup';\r\n\r\nconst AddEditUser = ({ onClose, editDetails }) => {\r\n  const [valid, setValid] = React.useState(false)\r\n  const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n  const [role, setSelectedRole] = React.useState(authRoles.user);\r\n  const [masterDropdownData,setMasterDropdownData]= React.useState();\r\nconst [departments,setDepartments]= React.useState();\r\nconst [selectedDepartment, setSelectedDepartment]= React.useState();\r\n  const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n  const navigate = useNavigate();\r\n\r\n  const HeaderTitle = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\npadding: 1rem;\r\nfont-size: 1.5rem;\r\n`\r\n  const FormContainer = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\npadding: 1rem 1rem 0 1rem;\r\ngap: 1rem;\r\n`\r\n  const MyErrorMessage = styled.div`\r\ncolor: red;\r\nfont-size: 13px;\r\n`\r\nlet phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\r\nconst validationSchema = Yup.object().shape({\r\n  designation: Yup.string()\r\n    .max(20, 'Designation can not be more than 20 characters long'),\r\n\r\n    firstName: Yup.string()\r\n    .required(\"required\")\r\n    .max(20,\"First-name can not be more than 20 characters long\" ),\r\n\r\n    lastName: Yup.string()\r\n    .required(\"required\")\r\n    .max(20,\"Last-name can not be more than 20 characters long\" ),\r\n\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (editDetails) {\r\n      {\r\n        setIsActive(editDetails?.is_active);\r\n        if(editDetails?.role==='admin'){\r\n            setSelectedRole(authRoles.admin);\r\n        }else if(editDetails?.role==='teamLead'){\r\n            setSelectedRole(authRoles.teamLead);\r\n        }else if(editDetails?.role==='agent'){\r\n            setSelectedRole(authRoles.agent);\r\n        }else if(editDetails?.role==='user'){\r\n            setSelectedRole(authRoles.user);\r\n        }\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const onSubmit = (values) => {\r\n    const reqBody = {\r\n      email: values.email,\r\n      active: isActive,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      role: role.toString(),\r\n      designation: values.designation,\r\n      mobile: values.mobile,\r\n      departmentId: selectedDepartment\r\n    };\r\n    if (editDetails?.id) {\r\n    reqBody.id = editDetails.id\r\n    }\r\n    createUpdateUser(reqBody).then((resp) => {\r\n    if (resp?.status === false) {\r\n    return Swal.fire({\r\n    icon: 'error',\r\n    title: 'Error',\r\n    text: resp.error,\r\n    showCloseButton: true,\r\n    showConfirmButton: false,\r\n    width: 400,\r\n    })\r\n    } else {\r\n    Swal.fire({\r\n    icon: 'success',\r\n    title: 'Success',\r\n    text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n    showCloseButton: true,\r\n    showConfirmButton: false,\r\n    width: 400,\r\n    })\r\n    setTimeout(()=>{\r\n      return window.location.href='/users';\r\n    },2000)\r\n    }\r\n    })\r\n  }\r\n  const initialValues = {\r\n    firstName: editDetails?.first_name ? editDetails.first_name : '',\r\n    lastName: editDetails?.last_name ? editDetails.last_name : '',\r\n    email: editDetails?.email ? editDetails.email : '',\r\n    designation: editDetails?.designation ? editDetails.designation : '',\r\n    mobile: editDetails?.mobile ? editDetails.mobile : '',\r\n    role: editDetails?.role ? editDetails.role : '',\r\n    departmentId: editDetails?.department_id? editDetails.department_id:'',\r\n  }\r\n  const onChangeRole=(event)=>{\r\n    setSelectedRole(event.target.value);\r\n  }\r\n  const handleCheckBoxChange = (event) => {\r\n    if (event?.target.checked) {\r\n      setIsActive(false);\r\n    } else {\r\n      setIsActive(true);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getMasterDropdownData().then((resp)=>{\r\n      if (resp?.status === false) {\r\n        return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: resp.error,\r\n        showCloseButton: true,\r\n        showConfirmButton: false,\r\n        width: 400,\r\n        })\r\n        } else {\r\n          setDepartments(resp?.data?.departments);\r\n          setMasterDropdownData(resp.data);\r\n          setSelectedDepartment(editDetails?.department_id);\r\n      }\r\n    })\r\n  }, [])\r\n  \r\n  const handleDepartmentChange=(event)=>{\r\n    setSelectedDepartment(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n          <HeaderTitle>\r\n            <div>\r\n              {editDetails?.id ? 'Edit User' : 'Add User'}\r\n            </div>\r\n            <div onClick={handleClose}>\r\n              <Icon sx={{\r\n                color: '#59B691',\r\n                fontSize: '35px !important',\r\n                cursor: 'pointer',\r\n              }}>\r\n                cancelsharp\r\n              </Icon>\r\n            </div>\r\n          </HeaderTitle>\r\n          <Divider />\r\n          <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}> \r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <FormContainer>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" required={true} name=\"firstName\" type=\"text\" label=\"First Name\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.firstName}\r\n                        error={Boolean(errors.firstName && touched.firstName)} \r\n                        helperText={touched.firstName && errors.firstName}\r\n                        onChange={handleChange} sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"lastName\" required={true} type=\"text\" label=\"Last Name\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.lastName}\r\n                        error={Boolean(errors.lastName && touched.lastName)} \r\n                        helperText={touched.lastName && errors.lastName}\r\n                        onChange={handleChange} sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"email\" required={true} type=\"email\" label=\"Email\"\r\n                        disabled={editDetails?.id ? true : false} variant=\"outlined\" onBlur={handleBlur}\r\n                        value={values.email} onChange={handleChange} sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"mobile\" type=\"text\" label=\"Mobile\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.mobile} onChange={handleChange}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                        sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"designation\" required={true} type=\"text\" label=\"Designation\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.designation}\r\n                        onChange={handleChange}\r\n                        error={Boolean(errors.designation && touched.designation)} \r\n                        helperText={touched.designation && errors.designation}\r\n                        sx={{ mb: 1.5 }} />\r\n\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"role\">Role</InputLabel>\r\n                        <Select\r\n                          labelId=\"role\"\r\n                          id=\"role\"\r\n                          value={role}\r\n                          label=\"Role\"\r\n                          required={true}\r\n                          onChange={onChangeRole}\r\n                          defaultValue={values.role}\r\n                        >\r\n                          <MenuItem value={authRoles.admin}>Admin</MenuItem>\r\n                          <MenuItem value={authRoles.teamLead}>Team Lead</MenuItem>\r\n                          <MenuItem value={authRoles.agent}>Agent</MenuItem>\r\n                          <MenuItem value={authRoles.user}>User</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel  required={true} id=\"role\">Department</InputLabel>\r\n                        <Select\r\n                          labelId=\"department\"\r\n                          id=\"department\"\r\n                          required={true}\r\n                          value={selectedDepartment}\r\n                          label=\"Department\"\r\n                          onChange={handleDepartmentChange}\r\n                          defaultValue={selectedDepartment}\r\n                        >\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t departments?.filter(department=>department.is_active || department.id === selectedDepartment)?.map((d, i) =>{\r\n\t\t\t\t\t\t\t\t\treturn <MenuItem key={i} value={d.id}>{d.name}</MenuItem>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControlLabel control={<Checkbox />}\r\n                        disabled={!editDetails?.id}\r\n                        checked={!isActive}\r\n                        onChange={handleCheckBoxChange}\r\n                        label=\"Inactive\"\r\n                      />\r\n                    </Grid>\r\n\r\n\r\n                  </Grid>\r\n\r\n                </FormContainer>\r\n                <div className='d-flex justify-content-end'>\r\n                  <LoadingButton type=\"submit\" color=\"primary\" variant=\"contained\"\r\n                    sx={{ my: 2, top: \"60\", marginRight: \"10px\", marginTop: \"25vh\" }}>\r\n                    Update\r\n                  </LoadingButton>\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n          </Formik>\r\n        </Card>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddEditUser","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./userList.css\";\r\n  import { useEffect, useState } from \"react\";\r\nimport { getAllUsers } from \"app/services/userService\";\r\nimport moment from \"moment\";\r\nimport { Strings } from \"config/strings\";\r\n  \r\n  const StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }));\r\n  const UsersTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    \"thead\":{\r\n        backgroundColor:\"rgb(34, 42, 69)\"\r\n      },\r\n      \"thead > tr\":{\r\n        backgroundColor:\"rgb(34, 42, 69)\"\r\n      },\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: 'none',\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:nth-of-type(6)': {\r\n        width: '90px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const UsersList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchUsersList()\r\n    }, [page])\r\n  \r\n    const fetchUsersList = () => {\r\n        getAllUsers(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <UsersTable>\r\n            <MaterialTable\r\n                        title=\"Users\"\r\n                        columns={[\r\n                            { title: 'User Email', field: 'email'},\r\n                            { title: 'First Name', field: 'firstName'},\r\n                            { title: 'Last Name', field: 'lastName'},\r\n                            { title: 'Active', field: 'status'},\r\n                            { title: 'Last Login Date', field: 'loginDate'}\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            return {\r\n                                userId: e.id,\r\n                                email: e.email,\r\n                                firstName: e.first_name,\r\n                                lastName: e.last_name,\r\n                                status: e.is_active,\r\n                                projectId: e.id,\r\n                                loginDate: e.last_login_dt!==null?moment(e.last_login_dt).format(Strings.DATE_FORMAT):\"-\"\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit User',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.userId)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </UsersTable>\r\n  \r\n  \r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default UsersList;\r\n  ","import { styled } from \"@mui/system\"\r\nimport { getUserById } from \"app/services/userService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditUser from \"./addEditUser\";\r\nimport UsersList from \"./userList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst Title = styled('span')(() => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    marginBottom: '16px',\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst UserView = () => {\r\n    const [currentView, setCurrentView] = useState('Users');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-user') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-user') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Users')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = (userId) => {\r\n        getUserById({id:userId}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-user/${userId}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-user`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Users' && (\r\n                    <UsersList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditUser\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditUser\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UserView"],"sourceRoot":""}