{"version":3,"sources":["app/views/status/addEditStatus.jsx","app/views/status/statusList.jsx","app/views/status/statusView.jsx"],"names":["AddEditStatus","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","statusTypes","setStatusType","departmentvalue","setDepartmentValue","selectedStatusType","setSelectedStatusType","department","setDepartment","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","useEffect","status_type","department_id","getMasterDropdownData","then","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","data","departments","validationSchema","Yup","shape","statusName","max","initialValues","name","handleCheckBoxChange","event","target","checked","handleStatusType","value","handleDepartment","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","statusType","departmentId","Strings","STATUS_NAME_MANDATORY","createStatus","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","label","variant","onBlur","onChange","Boolean","helperText","FormControl","InputLabel","required","Select","labelId","defaultValue","map","d","i","MenuItem","filter","FormControlLabel","control","Checkbox","disabled","className","LoadingButton","my","top","marginRight","marginTop","StatusTable","Table","whiteSpace","height","borderRadius","boxShadow","borderBottom","paddingLeft","justifyContent","alignItems","flex","margin","StatusList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchStatusList","getAllStatus","response","pagingData","Object","assign","sno","totalItems","Box","overflow","Fab","rowData","columns","field","e","statusId","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","backgroundColor","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","textTransform","palette","secondary","marginBottom","StatusView","currentView","useSearchParams","query","setEditDetails","get","split","getById"],"mappings":"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","file":"static/js/16.335f653d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nimport { Formik } from 'formik';\r\nimport { Card, Checkbox, Divider, FormControl, FormControlLabel, Icon, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { createStatus, getMasterDropdownData } from 'app/services/adminService';\r\nimport \"./statusList.css\";\r\nimport * as Yup from 'yup';\r\n\r\nconst AddEditStatus = ({ onClose, editDetails }) => {\r\n    const [valid, setValid] = React.useState(false)\r\n    const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n    const [statusTypes, setStatusType] = React.useState([]);\r\n    const [departmentvalue, setDepartmentValue] = React.useState([]);\r\n    const [selectedStatusType, setSelectedStatusType] = React.useState();\r\n    const [department, setDepartment] = React.useState();\r\n    const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n    const navigate = useNavigate();\r\n\r\n    const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n`\r\n    const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n`\r\n    const MyErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 13px;\r\n`\r\n\r\n    React.useEffect(() => {\r\n        if (editDetails) {\r\n            {\r\n                setIsActive(editDetails?.is_active);\r\n                setSelectedStatusType(editDetails?.status_type);\r\n                setDepartment(editDetails?.department_id);\r\n            \r\n            }\r\n        }\r\n        getMasterDropdownData().then((resp) => {\r\n            if (resp?.status === false) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: resp.error,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n            } else {\r\n                setStatusType(resp?.data?.statusTypes)\r\n                setDepartmentValue(resp?.data?.departments)\r\n            }\r\n        })\r\n    }, [])\r\n    const validationSchema = Yup.object().shape({\r\n        statusName: Yup.string()\r\n          .max(20, 'Status Name can not be more than 20 characters long'),\r\n      });\r\n\r\n    const onSubmit = (values) => {\r\n        const reqBody = {\r\n            statusName: values.statusName,\r\n            statusType: selectedStatusType,\r\n            departmentId: department,\r\n            is_active: isActive\r\n        };\r\n        if (editDetails?.id) {\r\n            reqBody.id = editDetails.id\r\n        } else if (!values.statusName) {\r\n            return Swal.fire({\r\n                icon: 'warning',\r\n                title: 'Warning',\r\n                text: Strings.STATUS_NAME_MANDATORY,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n        }\r\n        createStatus(reqBody).then((resp) => {\r\n            if (resp?.status === false) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: resp.error,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n                return navigate('/status');\r\n            }\r\n\r\n        })\r\n    }\r\n    const initialValues = {\r\n        statusName: editDetails?.name ? editDetails.name : ''\r\n    }\r\n    const handleCheckBoxChange = (event) => {\r\n        if (event?.target.checked) {\r\n            setIsActive(false);\r\n        } else {\r\n            setIsActive(true);\r\n        }\r\n    }\r\n    const handleStatusType = (event) => {\r\n        setSelectedStatusType(event.target.value);\r\n    }\r\n    const handleDepartment = (event) => {\r\n        setDepartment(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n                    <HeaderTitle>\r\n                        <div>\r\n                            {editDetails?.id ? 'Edit Status' : 'Add Status'}\r\n                        </div>\r\n                        <div onClick={handleClose}>\r\n                            <Icon\r\n                                sx={{\r\n                                    color: '#59B691',\r\n                                    fontSize: '35px !important',\r\n                                    cursor: 'pointer',\r\n                                }}\r\n                            >\r\n                                cancelsharp\r\n                            </Icon>\r\n                        </div>\r\n                    </HeaderTitle>\r\n                    <Divider />\r\n                    <Formik\r\n                        onSubmit={onSubmit}\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <FormContainer divide={true}>\r\n                                    <div>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            size=\"large\"\r\n                                            name=\"statusName\"\r\n                                            type=\"text\"\r\n                                            label=\"Status Name\"\r\n                                            variant=\"outlined\"\r\n                                            onBlur={handleBlur}\r\n                                            value={values.statusName}\r\n                                            onChange={handleChange}\r\n                                            error={Boolean(errors.statusName && touched.statusName)}\r\n                                            helperText={touched.statusName && errors.statusName}\r\n                                            sx={{ mb: 1.5 }}\r\n                                        />\r\n                                        <br />\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel required={true} id=\"statusTypes\">Status Type</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"statusTypes\"\r\n                                                id=\"statusTypes\"\r\n                                                required={true}\r\n                                                value={selectedStatusType}\r\n                                                label=\"statusTypes\"\r\n                                                onChange={handleStatusType}\r\n                                                defaultValue={selectedStatusType}\r\n                                            >\r\n                                                {\r\n                                                    statusTypes?.map((d, i) => {\r\n                                                        return <MenuItem key={i} value={d}>{d}</MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel required={true} id=\"department\">Department</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"department\"\r\n                                                id=\"department\"\r\n                                                required={true}\r\n                                                value={department}\r\n                                                label=\"department\"\r\n                                                onChange={handleDepartment}\r\n                                                defaultValue={department}\r\n                                            >\r\n                                                {\r\n                                                    departmentvalue?.filter((d,i) => (d.is_active === true)).map((d, i) => {\r\n                                                        return <MenuItem key={i} value={d.id}>{d.name}</MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox />}\r\n                                            disabled={!editDetails?.id}\r\n                                            checked={!isActive}\r\n                                            onChange={handleCheckBoxChange}\r\n                                            label=\"Inactive\"\r\n                                        />\r\n                                    </div>\r\n                                </FormContainer>\r\n                                <div className='d-flex justify-content-end'>\r\n                                    <LoadingButton\r\n                                        type=\"submit\"\r\n                                        color=\"primary\"\r\n                                        variant=\"contained\"\r\n                                        sx={{ my: 2, top: \"100\", marginRight: \"10px\", marginTop: \"45vh\" }}\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n\r\n                    </Formik>\r\n                </Card>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEditStatus\r\n","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./statusList.css\";\r\n  import { useEffect, useState } from \"react\";\r\nimport { getAllStatus } from \"app/services/adminService\";\r\n  \r\n  const StatusTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: 'none',\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:nth-of-type(3)': {\r\n        width: '90px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const StatusList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchStatusList()\r\n    }, [page])\r\n  \r\n    const fetchStatusList = () => {\r\n        getAllStatus(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <StatusTable>\r\n            <MaterialTable\r\n                        title=\"Status\"\r\n                        columns={[\r\n                            { title: 'Status Name', field: 'statusName'},\r\n                            { title: 'Active', field: 'status'}\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            return {\r\n                                statusName: e.name,\r\n                                status: e.is_active,\r\n                                statusId: e.id\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit Status',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.statusId)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </StatusTable>\r\n  \r\n  \r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default StatusList;\r\n  ","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { getById } from \"app/services/adminService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditStatus from \"./addEditStatus\";\r\nimport StatusList from \"./statusList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst Title = styled('span')(() => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    marginBottom: '16px',\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst StatusView = () => {\r\n    const [currentView, setCurrentView] = useState('Status');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-status') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-status') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Status')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = async(statusId) => {\r\n        await getById({id:statusId}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-status/${statusId}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-status`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Status' && (\r\n                    <StatusList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditStatus\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditStatus\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default StatusView"],"sourceRoot":""}