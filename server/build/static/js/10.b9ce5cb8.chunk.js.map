{"version":3,"sources":["app/views/Departments/addEditDepartment.jsx","app/views/Departments/departmentList.jsx","app/views/Departments/departmentView.js"],"names":["AddEditDepartment","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","useEffect","validationSchema","Yup","shape","departmentName","max","initialValues","name","handleCheckBoxChange","event","target","checked","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","Swal","fire","icon","title","text","Strings","DEPARTMENT_NAME_MANDATORY","showCloseButton","showConfirmButton","width","createDepartment","then","resp","status","error","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","label","variant","onBlur","value","onChange","Boolean","helperText","FormControlLabel","control","Checkbox","disabled","className","LoadingButton","my","top","marginRight","marginTop","DepartmentsTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","DepartmentList","onEditClick","onCreateClick","setCurrentView","data","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchDepartmentList","getAllDepartment","response","pagingData","map","i","Object","assign","sno","totalItems","Box","overflow","Fab","rowData","columns","field","e","departmentId","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","backgroundColor","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","palette","secondary","marginBottom","DepartmentView","currentView","useSearchParams","query","setEditDetails","get","split","getDepartmentById"],"mappings":"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","file":"static/js/10.b9ce5cb8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport { Formik } from 'formik';\r\nimport './departmentList.css'\r\nimport { Card, Checkbox, Divider, FormControlLabel, Icon, TextField } from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { createDepartment } from 'app/services/adminService';\r\nimport * as Yup from 'yup';\r\n\r\nconst AddEditDepartment = ({ onClose, editDetails }) => {\r\n    const [valid, setValid] = React.useState(false)\r\n    const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n    const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n    const navigate = useNavigate();\r\n\r\n    const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n`\r\n    const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n`\r\n    const MyErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 13px;\r\n`\r\n\r\n    React.useEffect(() => {\r\n        if(editDetails){{\r\n            setIsActive(editDetails?.is_active);\r\n        }}\r\n    }, [])\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        departmentName: Yup.string()\r\n          .max(20, 'Department Name can not be more than 20 characters long'),\r\n      });\r\n\r\n    const onSubmit = (values) => {\r\n        const reqBody = {\r\n            departmentName: values.departmentName,\r\n            is_active: isActive\r\n        };\r\n        if (editDetails?.id) {\r\n            reqBody.id = editDetails.id\r\n        } else if (!values.departmentName) {\r\n            return Swal.fire({\r\n                icon: 'warning',\r\n                title: 'Warning',\r\n                text: Strings.DEPARTMENT_NAME_MANDATORY,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n        }\r\n        createDepartment(reqBody).then((resp) => {\r\n            if (resp?.status === false) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: resp.error,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n                return navigate('/departments');\r\n            }\r\n\r\n        })\r\n    }\r\n    const initialValues = {\r\n        departmentName: editDetails?.name ? editDetails.name : ''\r\n    }\r\n    const handleCheckBoxChange = (event) => {\r\n        if (event?.target.checked) {\r\n            setIsActive(false);\r\n        } else {\r\n            setIsActive(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n                    <HeaderTitle>\r\n                        <div>\r\n                            {editDetails?.id ? 'Edit Department' : 'Add Department'}\r\n                        </div>\r\n                        <div onClick={handleClose}>\r\n                            <Icon\r\n                                sx={{\r\n                                    color: '#59B691',\r\n                                    fontSize: '35px !important',\r\n                                    cursor: 'pointer',\r\n                                }}\r\n                            >\r\n                                cancelsharp\r\n                            </Icon>\r\n                        </div>\r\n                    </HeaderTitle>\r\n                    <Divider />\r\n                    <Formik\r\n                        onSubmit={onSubmit}\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <FormContainer divide={true}>\r\n                                    <div>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            size=\"large\"\r\n                                            name=\"departmentName\"\r\n                                            type=\"text\"\r\n                                            label=\"Department Name\"\r\n                                            variant=\"outlined\"\r\n                                            onBlur={handleBlur}\r\n                                            value={values.departmentName}\r\n                                            onChange={handleChange}\r\n                                            error={Boolean(errors.departmentName && touched.departmentName)}\r\n                                            helperText={touched.departmentName && errors.departmentName}\r\n                                            sx={{ mb: 1.5 }}\r\n                                        />\r\n                                        <br />\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox />}\r\n                                            disabled={!editDetails?.id}\r\n                                            checked={!isActive}\r\n                                            onChange={handleCheckBoxChange}\r\n                                            label=\"Inactive\"\r\n                                        />\r\n                                    </div>\r\n                                </FormContainer>\r\n                                <div className='d-flex justify-content-end'>\r\n                                    <LoadingButton\r\n                                        type=\"submit\"\r\n                                        color=\"primary\"\r\n                                        variant=\"contained\"\r\n                                        sx={{ my: 2, top: \"100\", marginRight: \"10px\", marginTop: \"45vh\" }}\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n\r\n                    </Formik>\r\n                </Card>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEditDepartment\r\n","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./departmentList.css\";\r\n  import { useEffect, useState } from \"react\";\r\nimport { getAllDepartment } from \"app/services/adminService\";\r\n  \r\n  const StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }));\r\n  const DepartmentsTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: 'none',\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:nth-of-type(3)': {\r\n        width: '90px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const DepartmentList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchDepartmentList()\r\n    }, [page])\r\n  \r\n    const fetchDepartmentList = () => {\r\n        getAllDepartment(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <DepartmentsTable>\r\n            <MaterialTable\r\n                        title=\"Departments\"\r\n                        columns={[\r\n                            { title: 'Department Name', field: 'departmentName'},\r\n                            { title: 'Active', field: 'status'}\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            return {\r\n                                departmentName: e.name,\r\n                                status: e.is_active,\r\n                                departmentId: e.id\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit Department',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.departmentId)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </DepartmentsTable>\r\n  \r\n  \r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default DepartmentList;\r\n  ","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { getDepartmentById } from \"app/services/adminService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditDepartment from \"./addEditDepartment\";\r\nimport DepartmentList from \"./departmentList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst Title = styled('span')(() => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    marginBottom: '16px',\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst DepartmentView = () => {\r\n    const [currentView, setCurrentView] = useState('Department');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-department') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-department') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Department')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = async(departmentId) => {\r\n        await getDepartmentById({id:departmentId}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-department/${departmentId}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-department`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Department' && (\r\n                    <DepartmentList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditDepartment\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditDepartment\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DepartmentView"],"sourceRoot":""}