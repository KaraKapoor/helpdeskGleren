{"version":3,"sources":["app/views/users/addEditUser.jsx","app/views/users/userList.jsx","app/views/users/userView.js"],"names":["AddEditUser","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","authRoles","user","role","setSelectedRole","setMasterDropdownData","departments","setDepartments","selectedDepartment","setSelectedDepartment","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","validationSchema","Yup","shape","designation","max","firstName","required","lastName","useEffect","admin","teamLead","agent","initialValues","first_name","last_name","email","mobile","departmentId","department_id","onChangeRole","event","target","value","handleCheckBoxChange","checked","getMasterDropdownData","then","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","data","handleDepartmentChange","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","active","toString","createUpdateUser","Strings","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","errors","touched","handleChange","handleBlur","handleSubmit","Grid","container","spacing","item","lg","md","sm","xs","TextField","fullWidth","size","name","type","label","variant","onBlur","Boolean","helperText","onChange","disabled","FormControl","InputLabel","Select","labelId","defaultValue","MenuItem","filter","department","map","d","i","FormControlLabel","control","Checkbox","className","LoadingButton","my","top","marginRight","marginTop","UsersTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","backgroundColor","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","UsersList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchUsersList","getAllUsers","response","pagingData","Object","assign","sno","totalItems","Box","overflow","Fab","rowData","columns","field","e","userId","projectId","loginDate","last_login_dt","moment","format","DATE_FORMAT","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","palette","secondary","marginBottom","UserView","currentView","useSearchParams","query","setEditDetails","get","split","getUserById"],"mappings":"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","file":"static/js/19.931d2b1b.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nimport { Formik } from 'formik';\r\nimport './userList.css'\r\nimport { Card, Checkbox, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, MenuItem, Select, TextField }\r\n  from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { authRoles } from 'app/auth/authRoles';\r\nimport { createUpdateUser } from 'app/services/userService';\r\nimport { getMasterDropdownData } from 'app/services/adminService';\r\nimport * as Yup from 'yup';\r\n\r\nconst AddEditUser = ({ onClose, editDetails }) => {\r\n  const [valid, setValid] = React.useState(false)\r\n  const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n  const [role, setSelectedRole] = React.useState(authRoles.user);\r\n  const [masterDropdownData,setMasterDropdownData]= React.useState();\r\nconst [departments,setDepartments]= React.useState();\r\nconst [selectedDepartment, setSelectedDepartment]= React.useState();\r\n  const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n  const navigate = useNavigate();\r\n\r\n  const HeaderTitle = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\npadding: 1rem;\r\nfont-size: 1.5rem;\r\n`\r\n  const FormContainer = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\npadding: 1rem 1rem 0 1rem;\r\ngap: 1rem;\r\n`\r\n  const MyErrorMessage = styled.div`\r\ncolor: red;\r\nfont-size: 13px;\r\n`\r\nlet phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\r\nconst validationSchema = Yup.object().shape({\r\n  designation: Yup.string()\r\n    .max(20, 'Designation can not be more than 20 characters long'),\r\n\r\n    firstName: Yup.string()\r\n    .required(\"required\")\r\n    .max(20,\"First-name can not be more than 20 characters long\" ),\r\n\r\n    lastName: Yup.string()\r\n    .required(\"required\")\r\n    .max(20,\"Last-name can not be more than 20 characters long\" ),\r\n\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (editDetails) {\r\n      {\r\n        setIsActive(editDetails?.is_active);\r\n        if(editDetails?.role==='admin'){\r\n            setSelectedRole(authRoles.admin);\r\n        }else if(editDetails?.role==='teamLead'){\r\n            setSelectedRole(authRoles.teamLead);\r\n        }else if(editDetails?.role==='agent'){\r\n            setSelectedRole(authRoles.agent);\r\n        }else if(editDetails?.role==='user'){\r\n            setSelectedRole(authRoles.user);\r\n        }\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const onSubmit = (values) => {\r\n    const reqBody = {\r\n      email: values.email,\r\n      active: isActive,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      role: role.toString(),\r\n      designation: values.designation,\r\n      mobile: values.mobile,\r\n      departmentId: selectedDepartment\r\n    };\r\n    if (editDetails?.id) {\r\n    reqBody.id = editDetails.id\r\n    }\r\n    createUpdateUser(reqBody).then((resp) => {\r\n    if (resp?.status === false) {\r\n    return Swal.fire({\r\n    icon: 'error',\r\n    title: 'Error',\r\n    text: resp.error,\r\n    showCloseButton: true,\r\n    showConfirmButton: false,\r\n    width: 400,\r\n    })\r\n    } else {\r\n    Swal.fire({\r\n    icon: 'success',\r\n    title: 'Success',\r\n    text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n    showCloseButton: true,\r\n    showConfirmButton: false,\r\n    width: 400,\r\n    })\r\n    return navigate('/users');\r\n    }\r\n\r\n    })\r\n  }\r\n  const initialValues = {\r\n    firstName: editDetails?.first_name ? editDetails.first_name : '',\r\n    lastName: editDetails?.last_name ? editDetails.last_name : '',\r\n    email: editDetails?.email ? editDetails.email : '',\r\n    designation: editDetails?.designation ? editDetails.designation : '',\r\n    mobile: editDetails?.mobile ? editDetails.mobile : '',\r\n    role: editDetails?.role ? editDetails.role : '',\r\n    departmentId: editDetails?.department_id? editDetails.department_id:'',\r\n  }\r\n  const onChangeRole=(event)=>{\r\n    setSelectedRole(event.target.value);\r\n  }\r\n  const handleCheckBoxChange = (event) => {\r\n    if (event?.target.checked) {\r\n      setIsActive(false);\r\n    } else {\r\n      setIsActive(true);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getMasterDropdownData().then((resp)=>{\r\n      if (resp?.status === false) {\r\n        return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: resp.error,\r\n        showCloseButton: true,\r\n        showConfirmButton: false,\r\n        width: 400,\r\n        })\r\n        } else {\r\n          setDepartments(resp?.data?.departments);\r\n          setMasterDropdownData(resp.data);\r\n          setSelectedDepartment(editDetails?.department_id);\r\n      }\r\n    })\r\n  }, [])\r\n  \r\n  const handleDepartmentChange=(event)=>{\r\n    setSelectedDepartment(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n          <HeaderTitle>\r\n            <div>\r\n              {editDetails?.id ? 'Edit User' : 'Add User'}\r\n            </div>\r\n            <div onClick={handleClose}>\r\n              <Icon sx={{\r\n                color: '#59B691',\r\n                fontSize: '35px !important',\r\n                cursor: 'pointer',\r\n              }}>\r\n                cancelsharp\r\n              </Icon>\r\n            </div>\r\n          </HeaderTitle>\r\n          <Divider />\r\n          <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}> \r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <FormContainer>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" required={true} name=\"firstName\" type=\"text\" label=\"First Name\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.firstName}\r\n                        error={Boolean(errors.firstName && touched.firstName)} \r\n                        helperText={touched.firstName && errors.firstName}\r\n                        onChange={handleChange} sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"lastName\" required={true} type=\"text\" label=\"Last Name\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.lastName}\r\n                        error={Boolean(errors.lastName && touched.lastName)} \r\n                        helperText={touched.lastName && errors.lastName}\r\n                        onChange={handleChange} sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"email\" required={true} type=\"email\" label=\"Email\"\r\n                        disabled={editDetails?.id ? true : false} variant=\"outlined\" onBlur={handleBlur}\r\n                        value={values.email} onChange={handleChange} sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"mobile\" type=\"text\" label=\"Mobile\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.mobile} onChange={handleChange}\r\n                        helperText={touched.mobile && errors.mobile}\r\n                        sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" name=\"designation\" required={true} type=\"text\" label=\"Designation\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.designation}\r\n                        onChange={handleChange}\r\n                        error={Boolean(errors.designation && touched.designation)} \r\n                        helperText={touched.designation && errors.designation}\r\n                        sx={{ mb: 1.5 }} />\r\n\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"role\">Role</InputLabel>\r\n                        <Select\r\n                          labelId=\"role\"\r\n                          id=\"role\"\r\n                          value={role}\r\n                          label=\"Role\"\r\n                          required={true}\r\n                          onChange={onChangeRole}\r\n                          defaultValue={values.role}\r\n                        >\r\n                          <MenuItem value={authRoles.admin}>Admin</MenuItem>\r\n                          <MenuItem value={authRoles.teamLead}>Team Lead</MenuItem>\r\n                          <MenuItem value={authRoles.agent}>Agent</MenuItem>\r\n                          <MenuItem value={authRoles.user}>User</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel  required={true} id=\"role\">Department</InputLabel>\r\n                        <Select\r\n                          labelId=\"department\"\r\n                          id=\"department\"\r\n                          required={true}\r\n                          value={selectedDepartment}\r\n                          label=\"Department\"\r\n                          onChange={handleDepartmentChange}\r\n                          defaultValue={selectedDepartment}\r\n                        >\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t departments?.filter(department=>department.is_active || department.id === selectedDepartment)?.map((d, i) =>{\r\n\t\t\t\t\t\t\t\t\treturn <MenuItem key={i} value={d.id}>{d.name}</MenuItem>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControlLabel control={<Checkbox />}\r\n                        disabled={!editDetails?.id}\r\n                        checked={!isActive}\r\n                        onChange={handleCheckBoxChange}\r\n                        label=\"Inactive\"\r\n                      />\r\n                    </Grid>\r\n\r\n\r\n                  </Grid>\r\n\r\n                </FormContainer>\r\n                <div className='d-flex justify-content-end'>\r\n                  <LoadingButton type=\"submit\" color=\"primary\" variant=\"contained\"\r\n                    sx={{ my: 2, top: \"60\", marginRight: \"10px\", marginTop: \"25vh\" }}>\r\n                    Update\r\n                  </LoadingButton>\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n          </Formik>\r\n        </Card>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddEditUser","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./userList.css\";\r\n  import { useEffect, useState } from \"react\";\r\nimport { getAllUsers } from \"app/services/userService\";\r\nimport moment from \"moment\";\r\nimport { Strings } from \"config/strings\";\r\n  \r\n  const StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }));\r\n  const UsersTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    \"thead\":{\r\n        backgroundColor:\"rgb(34, 42, 69)\"\r\n      },\r\n      \"thead > tr\":{\r\n        backgroundColor:\"rgb(34, 42, 69)\"\r\n      },\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: 'none',\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:nth-of-type(6)': {\r\n        width: '90px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const UsersList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchUsersList()\r\n    }, [page])\r\n  \r\n    const fetchUsersList = () => {\r\n        getAllUsers(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <UsersTable>\r\n            <MaterialTable\r\n                        title=\"Users\"\r\n                        columns={[\r\n                            { title: 'User Email', field: 'email'},\r\n                            { title: 'First Name', field: 'firstName'},\r\n                            { title: 'Last Name', field: 'lastName'},\r\n                            { title: 'Active', field: 'status'},\r\n                            { title: 'Last Login Date', field: 'loginDate'}\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            return {\r\n                                userId: e.id,\r\n                                email: e.email,\r\n                                firstName: e.first_name,\r\n                                lastName: e.last_name,\r\n                                status: e.is_active,\r\n                                projectId: e.id,\r\n                                loginDate: e.last_login_dt!==null?moment(e.last_login_dt).format(Strings.DATE_FORMAT):\"-\"\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit User',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.userId)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </UsersTable>\r\n  \r\n  \r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default UsersList;\r\n  ","import { styled } from \"@mui/system\"\r\nimport { getUserById } from \"app/services/userService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditUser from \"./addEditUser\";\r\nimport UsersList from \"./userList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst Title = styled('span')(() => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    marginBottom: '16px',\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst UserView = () => {\r\n    const [currentView, setCurrentView] = useState('Users');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-user') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-user') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Users')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = (userId) => {\r\n        getUserById({id:userId}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-user/${userId}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-user`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Users' && (\r\n                    <UsersList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditUser\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditUser\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UserView"],"sourceRoot":""}