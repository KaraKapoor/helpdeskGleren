{"version":3,"sources":["../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Add.js","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","options","ConfirmationDialogRaw","props","onClose","valueProp","open","other","useState","setValue","radioGroupRef","useRef","useEffect","Dialog","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","id","DialogContent","dividers","RadioGroup","ref","name","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","DialogActions","Button","variant","color","onClick","DialogRoot","styled","width","backgroundColor","theme","palette","background","paper","maxHeight","ConfirmationDialog","React","setOpen","List","component","role","ListItem","button","divider","disabled","ListItemText","primary","secondary","keepMounted","className","DialogTitleRoot","MuiDialogTitle","margin","padding","spacing","position","right","top","grey","DialogTitle","children","disableTypography","Typography","IconButton","MuiDialogContent","MuiDialogActions","CustomizedDialogs","handleClose","gutterBottom","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","DialogContentText","FormDialog","TextField","autoFocus","type","fullWidth","FullScreenDialog","useTheme","fullScreen","AppBar","sx","Toolbar","edge","flex","marginLeft","Divider","display","flexDirection","marginTop","minWidth","MaxWidthDialog","setFullWidth","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","AlertDialog","emails","SimpleDialog","selectedValue","handleListItemClick","email","ListItemAvatar","Avatar","blue","SimpleDialogDemo","setSelectedValue","Container","marginBottom","AppDialog","Box","routeSegments","path","Stack","title","CustomizedDialog"],"mappings":"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","file":"static/js/9.770d6bea.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport { styled } from '@mui/system';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = useState(valueProp);\r\n  const radioGroupRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current !== null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => onClose();\r\n  const handleOk = () => onClose(value);\r\n\r\n  const handleChange = (_, newValue) => setValue(newValue);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      disableEscapeKeyDown\r\n      TransitionProps={{ onExiting: handleEntering }}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option) => (\r\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n  width: '100%',\r\n  maxWidth: 360,\r\n  backgroundColor: theme.palette.background.paper,\r\n  '& .paper': { width: '80%', maxHeight: 435 },\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  function handleClickListItem() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(newValue) {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DialogRoot>\r\n      <List component=\"div\" role=\"list\">\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\"\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n\r\n        <ConfirmationDialogRaw\r\n          keepMounted\r\n          open={open}\r\n          value={value}\r\n          className=\"paper\"\r\n          id=\"ringtone-menu\"\r\n          onClose={handleClose}\r\n        />\r\n      </List>\r\n    </DialogRoot>\r\n  );\r\n}\r\n","import CloseIcon from '@mui/icons-material/Close';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport MuiDialogActions from '@mui/material/DialogActions';\r\nimport MuiDialogContent from '@mui/material/DialogContent';\r\nimport MuiDialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/system';\r\nimport { useState } from 'react';\r\n\r\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\r\n  margin: 0,\r\n  padding: theme.spacing(2),\r\n  '& .closeButton': {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst DialogTitle = (props) => {\r\n  const { children, onClose } = props;\r\n  return (\r\n    <DialogTitleRoot disableTypography>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitleRoot>\r\n  );\r\n};\r\n\r\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\r\n  '&.root': { padding: theme.spacing(2) },\r\n}));\r\n\r\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\r\n  '&.root': { margin: 0, padding: theme.spacing(1) },\r\n}));\r\n\r\nconst CustomizedDialogs = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n        Open dialog\r\n      </Button>\r\n\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Modal title\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\r\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\r\n            auctor fringilla.\r\n          </Typography>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedDialogs;\r\n","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport React from 'react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from '@mui/material/TextField';\r\nimport React from 'react';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import CloseIcon from '@mui/icons-material/Close';\r\nimport { Box } from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Slide from '@mui/material/Slide';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport { useTheme } from '@mui/system';\r\nimport { H6 } from 'app/components/Typography';\r\nimport React from 'react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n\r\n          <Divider />\r\n\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport Switch from '@mui/material/Switch';\r\nimport { styled } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n  '& form': {\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    flexDirection: 'column',\r\n    width: 'fit-content',\r\n  },\r\n  '& .formControl': {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  '& .formControlLabel': {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  function handleMaxWidthChange(event) {\r\n    setMaxWidth(event.target.value);\r\n  }\r\n  function handleFullWidthChange(event) {\r\n    setFullWidth(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n\r\n          <form noValidate>\r\n            <FormControl className=\"formControl\">\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{ name: 'max-width', id: 'max-width' }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControlLabel\r\n              className=\"formControlLabel\"\r\n              label=\"Full width\"\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\r\n              }\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/system';\r\nimport React from 'react';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useState } from 'react';\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import AddIcon from '@mui/icons-material/Add';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { Box } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport { blue } from '@mui/material/colors';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  selectedValue: PropTypes.string,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </Box>\r\n  );\r\n}\r\n","import { Stack } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\nimport CustomizedDialogs from './CustomizedDialog';\r\nimport AlertDialogSlide from './DialogTransition';\r\nimport FormDialog from './FormDialog';\r\nimport FullScreenDialog from './FullScreenDialog';\r\nimport MaxWidthDialog from './OptimalSizeDialog';\r\nimport ResponsiveDialog from './ResponsiveDialog';\r\nimport AlertDialog from './SimpleAlerts';\r\nimport SimpleDialogDemo from './SimpleDialog';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst AppDialog = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\r\n      </Box>\r\n\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"simple Dialog\">\r\n          <SimpleDialogDemo />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"alert dialog\">\r\n          <AlertDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"transition\">\r\n          <AlertDialogSlide />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"form dialog\">\r\n          <FormDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"customized dialog\">\r\n          <CustomizedDialogs />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"full-screen dialog\">\r\n          <FullScreenDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"optimized size dialog\">\r\n          <MaxWidthDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"responsive dialog\">\r\n          <ResponsiveDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"confirmation dialog\">\r\n          <ConfirmationDialog />\r\n        </SimpleCard>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppDialog;\r\n"],"sourceRoot":""}