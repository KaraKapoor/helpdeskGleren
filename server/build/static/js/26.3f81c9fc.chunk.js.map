{"version":3,"sources":["app/views/Tenant Settings/tenantSettings.jsx","app/views/Tenant Settings/tenantSettingsView.jsx"],"names":["TenantSettings","onClose","editDetails","navigate","useNavigate","React","useState","selectedSessionTimeout","setSelectedSessionTimeout","data","setData","console","log","HeaderTitle","styled","div","FormContainer","props","divide","useEffect","getAllTenantSettings","then","response","map","i","Object","assign","setting_value","SessionHours","name","value","initialValues","handleSessionTimeoutChange","event","target","Card","elevation","sx","pt","mb","minHeight","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","settingName","createTenantSettings","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","Strings","UPDATED_SUCCESSFULLY","handleSubmit","Grid","item","lg","md","sm","xs","FormControl","fullWidth","InputLabel","id","Select","labelId","onChange","label","defaultValue","idx","MenuItem","className","LoadingButton","type","variant","my","top","marginRight","marginTop","ContentBox","theme","margin","breakpoints","down","TenantSettingsView","container","spacing"],"mappings":"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","file":"static/js/26.3f81c9fc.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Card, Divider, FormControl, Grid, Icon, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport { createTenantSettings, getAllTenantSettings } from 'app/services/adminService'\r\nimport { Strings } from 'config/strings'\r\nimport { Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst TenantSettings = ({ onClose, editDetails }) => {\r\n\r\n  const navigate = useNavigate();\r\n  const [selectedSessionTimeout, setSelectedSessionTimeout] = React.useState();\r\n  const [data, setData] = useState([])\r\n  console.log(data,\"vdatadata\")\r\n \r\n  const handleClose = (event) => {\r\n    navigate('/dashboard/default')\r\n    return null;\r\n  }\r\n\r\n  const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n    `\r\n  const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n    `\r\n    \r\n  const onSubmit = (values) => {\r\n    const reqBody = {\r\n      setting_value: selectedSessionTimeout,\r\n      settingName: 'Session Timeout'\r\n    };\r\n    createTenantSettings(reqBody).then((resp) => {\r\n      if (resp?.status === false) {\r\n        return Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: resp.error,\r\n          showCloseButton: true,\r\n          showConfirmButton: false,\r\n          width: 400,\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: Strings.UPDATED_SUCCESSFULLY,\r\n          showCloseButton: true,\r\n          showConfirmButton: false,\r\n          width: 400,\r\n        })\r\n        navigate('/dashboard/default')\r\n        return null;\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllTenantSettings().then((response) => {\r\n      response?.data?.map((data, i) => {\r\n        Object.assign(data)\r\n        console.log(response.data,'hi')\r\n        setData(response?.data[0]?.setting_value)\r\n      })     \r\n    })\r\n  },[])\r\n\r\n  const SessionHours = [\r\n    { name: '1h', value: '1h' },\r\n    { name: '2h', value: '2h' },\r\n    { name: '3h', value: '3h' },\r\n    { name: '4h', value: '4h' },\r\n    { name: '5h', value: '5h' },\r\n    { name: '6h', value: '6h' },\r\n    { name: '7h', value: '7h' },\r\n    { name: '8h', value: '8h' },\r\n    { name: '9h', value: '9h' },\r\n    { name: '10h', value: '10h' },\r\n    { name: '11h', value: '11h' },\r\n    { name: '12h', value: '12h' },\r\n  ]\r\n\r\n  const initialValues = {\r\n    setting_value: editDetails?.setting_value ? editDetails.setting_value : ''\r\n  }\r\n\r\n  const handleSessionTimeoutChange = (event) => {\r\n    setSelectedSessionTimeout(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n          <HeaderTitle>\r\n            <div>\r\n              Tenant Settings\r\n            </div>\r\n            <div onClick={handleClose}>\r\n              <Icon\r\n                sx={{\r\n                  color: '#59B691',\r\n                  fontSize: '35px !important',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                cancelsharp\r\n              </Icon>\r\n            </div>\r\n          </HeaderTitle>\r\n          <Divider />\r\n          <Formik\r\n            onSubmit={onSubmit}\r\n            initialValues={initialValues}\r\n          >\r\n            {({ values, handleSubmit }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <FormContainer>\r\n                  <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"Session_timeout\">Session Timeout</InputLabel>\r\n                      <Select\r\n                        labelId=\"Session_timeout\"\r\n                        id=\"Session_timeout\"\r\n                        value={selectedSessionTimeout}\r\n                        onChange={handleSessionTimeoutChange}\r\n                        label=\"Session Timeout\"\r\n                        defaultValue={data}                     \r\n                      >\r\n                        {console.log(selectedSessionTimeout)}\r\n                        {SessionHours.map(({ name, value }, idx) => (\r\n                          <MenuItem value={value} key={idx}>\r\n                            {name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </FormContainer>\r\n                <div className='d-flex justify-content-end'>\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ my: 2, top: \"100\", marginRight: \"10px\", marginTop: \"45vh\" }}\r\n                  >\r\n                    Submit\r\n                  </LoadingButton>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TenantSettings\r\n","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { Fragment, useState } from \"react\"\r\nimport TenantSettings from \"./tenantSettings\"\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst TenantSettingsView = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <TenantSettings>\r\n                        </TenantSettings>\r\n                    </Grid>\r\n                </Grid>\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TenantSettingsView"],"sourceRoot":""}