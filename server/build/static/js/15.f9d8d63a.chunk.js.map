{"version":3,"sources":["app/services/projectService.js","app/views/projects/addEditProject.jsx","app/views/projects/projectList.jsx","app/views/projects/ProjectView.jsx"],"names":["BASE_URL","config","general","baseUrl","AddEditProject","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","useEffect","initialValues","projectName","name","handleCheckBoxChange","event","target","checked","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","formData","reqBody","Swal","fire","icon","title","text","Strings","PROJECT_NAME_MANDATORY","showCloseButton","showConfirmButton","width","appRequest","method","RequestMethod","POST","url","project","create","data","then","resp","status","error","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","handleChange","errors","touched","handleBlur","handleSubmit","TextField","fullWidth","size","type","label","variant","onBlur","value","onChange","FormControlLabel","control","Checkbox","disabled","className","LoadingButton","my","top","marginRight","marginTop","ProjectsTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","ProjectList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchProjectList","GET","getAllProjects","response","pagingData","map","i","Object","assign","sno","totalItems","Box","overflow","Fab","rowData","columns","field","e","projectId","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","backgroundColor","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","palette","secondary","marginBottom","ProjectView","currentView","useSearchParams","query","setEditDetails","get","split","getById"],"mappings":"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","file":"static/js/15.f9d8d63a.chunk.js","sourcesContent":["import { appRequest, RequestMethod } from '../../app/httpClient/request'\r\nimport config from '../../config/apiConfig.json'\r\nconst BASE_URL = config.general.baseUrl;\r\n\r\nexport const createProject=(formData)=>{\r\n    return appRequest({\r\n        method: RequestMethod.POST,\r\n        url: BASE_URL + config.project.create,\r\n        data: formData,\r\n    })\r\n}\r\nexport const getById=(formData)=>{\r\n    return appRequest({\r\n        method: RequestMethod.POST,\r\n        url: BASE_URL + config.project.getById,\r\n        data: formData,\r\n    })\r\n}\r\nexport const getAllProjects=(page,size)=>{\r\n    return appRequest({\r\n        method: RequestMethod.GET,\r\n        url: BASE_URL + config.project.getAllProjects +`?page=${page}&size=${size}`\r\n    })\r\n}","import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nimport { Formik } from 'formik';\r\nimport './projectList.css'\r\nimport { createProject, getById } from 'app/services/projectService'\r\nimport { Card, Checkbox, Divider, FormControlLabel, Icon, TextField } from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\n\r\nconst AddEditProject = ({ onClose, editDetails }) => {\r\n    const [valid, setValid] = React.useState(false)\r\n    const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n    const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n    const navigate = useNavigate();\r\n\r\n    const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n`\r\n    const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n`\r\n    const MyErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 13px;\r\n`\r\n\r\n    React.useEffect(() => {\r\n        if(editDetails){{\r\n            setIsActive(editDetails?.is_active);\r\n        }}\r\n    }, [])\r\n\r\n    const onSubmit = (values) => {\r\n        const reqBody = {\r\n            projectName: values.projectName,\r\n            is_active: isActive\r\n        };\r\n        if (editDetails?.id) {\r\n            reqBody.id = editDetails.id\r\n        } else if (!values.projectName) {\r\n            return Swal.fire({\r\n                icon: 'warning',\r\n                title: 'Warning',\r\n                text: Strings.PROJECT_NAME_MANDATORY,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n        }\r\n        createProject(reqBody).then((resp) => {\r\n            if (resp?.status === false) {\r\n                return Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: resp.error,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success',\r\n                    text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n                    showCloseButton: true,\r\n                    showConfirmButton: false,\r\n                    width: 400,\r\n                })\r\n                return navigate('/project');\r\n            }\r\n\r\n        })\r\n    }\r\n    const initialValues = {\r\n        projectName: editDetails?.name ? editDetails.name : ''\r\n    }\r\n    const handleCheckBoxChange = (event) => {\r\n        if (event?.target.checked) {\r\n            setIsActive(false);\r\n        } else {\r\n            setIsActive(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n                    <HeaderTitle>\r\n                        <div>\r\n                            {editDetails?.id ? 'Edit Project' : 'Add Project'}\r\n                        </div>\r\n                        <div onClick={handleClose}>\r\n                            <Icon\r\n                                sx={{\r\n                                    color: '#59B691',\r\n                                    fontSize: '35px !important',\r\n                                    cursor: 'pointer',\r\n                                }}\r\n                            >\r\n                                cancelsharp\r\n                            </Icon>\r\n                        </div>\r\n                    </HeaderTitle>\r\n                    <Divider />\r\n                    <Formik\r\n                        onSubmit={onSubmit}\r\n                        initialValues={initialValues}\r\n                    >\r\n                        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <FormContainer divide={true}>\r\n                                    <div>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            size=\"large\"\r\n                                            name=\"projectName\"\r\n                                            type=\"text\"\r\n                                            label=\"Project Name\"\r\n                                            variant=\"outlined\"\r\n                                            onBlur={handleBlur}\r\n                                            value={values.projectName}\r\n                                            onChange={handleChange}\r\n                                            sx={{ mb: 1.5 }}\r\n                                        />\r\n                                        <br />\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox />}\r\n                                            disabled={!editDetails?.id}\r\n                                            checked={!isActive}\r\n                                            onChange={handleCheckBoxChange}\r\n                                            label=\"Inactive\"\r\n                                        />\r\n                                    </div>\r\n                                </FormContainer>\r\n                                <div className='d-flex justify-content-end'>\r\n                                    <LoadingButton\r\n                                        type=\"submit\"\r\n                                        color=\"primary\"\r\n                                        variant=\"contained\"\r\n                                        sx={{ my: 2, top: \"100\", marginRight: \"10px\", marginTop: \"45vh\" }}\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n\r\n                    </Formik>\r\n                </Card>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEditProject\r\n","import {\r\n  Box,\r\n  Fab,\r\n  Icon,\r\n  styled,\r\n  Table,\r\n  TablePagination,\r\n} from \"@mui/material\";\r\nimport { getAllProjects } from \"app/services/projectService\";\r\nimport MaterialTable from \"material-table\";\r\nimport \"./projectList.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n      \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n      \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\nconst ProjectsTable = styled(Table)(() => ({\r\n  marginTop: '20px',\r\n  whiteSpace: 'pre',\r\n  '& small': {\r\n      height: 15,\r\n      width: 50,\r\n      borderRadius: 500,\r\n      boxShadow:\r\n          '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n  },\r\n  '& td': {\r\n      borderBottom: 'none',\r\n  },\r\n  '& td:first-of-type': {\r\n      paddingLeft: '16px !important',\r\n  },\r\n  '& th:nth-of-type(3)': {\r\n      width: '90px !important',\r\n  },\r\n  '& th:first-of-type': {\r\n      paddingLeft: '16px !important',\r\n  },\r\n  '& tfoot tr td div:nth-child(1)': {\r\n      justifyContent: 'center',\r\n      alignItems:'center',\r\n      flex: 'initial',\r\n      margin: '0.5rem 0',\r\n  },\r\n}))\r\n\r\nconst ProjectList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n  const [data, setData] = useState([])\r\n  const [page, setPage] = useState(0)\r\n  const [totalRecords, setTotalRecords] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n      setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n      fetchProjectList()\r\n  };\r\n  useEffect(() => {\r\n      fetchProjectList()\r\n  }, [page])\r\n\r\n  const fetchProjectList = () => {\r\n      getAllProjects(page, rowsPerPage).then((response) => {\r\n          response?.data?.pagingData.map((data, i) => {\r\n              Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n          })\r\n          setData(response?.data?.pagingData)\r\n          setTotalRecords(response.data.totalItems)\r\n      })\r\n  }\r\n\r\n  return (\r\n      <Box width=\"100%\" overflow=\"auto\">\r\n          <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n              onCreateClick && onCreateClick(rowData)\r\n          }}>\r\n              <Icon>add</Icon>\r\n          </Fab>\r\n          <ProjectsTable>\r\n          <MaterialTable\r\n                      title=\"Projects\"\r\n                      columns={[\r\n                          { title: 'Project Name', field: 'projectName'},\r\n                          { title: 'Active', field: 'status'}\r\n                      ]}\r\n                      data={data.map((e) => {\r\n                          return {\r\n                              projectName: e.name,\r\n                              status: e.is_active,\r\n                              projectId: e.id\r\n                          }\r\n                      })}\r\n                      actions={[\r\n                          {\r\n                              icon: 'edit',\r\n                              tooltip: 'Edit Project',\r\n                              onClick: (event, rowData) => {\r\n                                  onEditClick &&\r\n                                      onEditClick(rowData.projectId)\r\n                              },\r\n                          }\r\n                      ]}\r\n                      options={{\r\n                        actionsColumnIndex: -1,\r\n                        emptyRowsWhenPaging: false,\r\n                        showTitle: false,\r\n                        search: false,\r\n                        toolbar: false,\r\n                        pageSizeOptions: [],\r\n                        pageSize: rowsPerPage,\r\n                        tableLayout: 'auto',\r\n                        maxBodyHeight:\"400px\",\r\n                        headerStyle: {\r\n                            fontSize: '14px',\r\n                            backgroundColor: '#222A45',\r\n                            color:'white',\r\n                            fontWeight: '700',\r\n                        },\r\n\r\n\r\n\r\n                      }}\r\n                      components={{\r\n                          Pagination: (props) => (\r\n                              <TablePagination\r\n                                  {...props}\r\n                                  count={totalRecords}\r\n                                  rowsPerPage={rowsPerPage}\r\n                                  page={page}\r\n                                  onPageChange={handleChangePage}\r\n                                  labelDisplayedRows={() => ''}\r\n                              />\r\n                          ),\r\n                      }}\r\n                  />\r\n          </ProjectsTable>\r\n\r\n\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import { Grid } from \"@mui/material\"\r\nimport { styled } from \"@mui/system\"\r\nimport { getById } from \"app/services/projectService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditProject from \"./addEditProject\";\r\nimport ProjectList from \"./projectList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst Title = styled('span')(() => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    marginBottom: '16px',\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst ProjectView = () => {\r\n    const [currentView, setCurrentView] = useState('Project');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-project') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-project') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Project')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = async(projectId) => {\r\n        await getById({id:projectId}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-project/${projectId}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-project`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Project' && (\r\n                    <ProjectList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditProject\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditProject\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProjectView"],"sourceRoot":""}