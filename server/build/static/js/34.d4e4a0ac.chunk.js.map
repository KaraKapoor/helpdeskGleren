{"version":3,"sources":["app/views/sessions/JwtLogin.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","imgUrl","minHeight","maxWidth","borderRadius","margin","initialValues","email","password","validationSchema","Yup","shape","min","required","JwtLogin","theme","useTheme","navigate","useNavigate","useState","loading","setLoading","login","useAuth","handleFormSubmit","values","className","container","item","sm","xs","p","sx","minWidth","src","width","alt","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","mb","to","style","color","palette","primary","main","my","marginLeft"],"mappings":"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","file":"static/js/34.d4e4a0ac.chunk.js","sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { Paragraph } from 'app/components/Typography';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { loginUser } from 'app/services/userService';\r\nimport { Formik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport * as Yup from 'yup';\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '32px',\r\n  position: 'relative',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst JWTRoot = styled(JustifyBox)(({ imgUrl }) => ({\r\n  background: '#1A2038',\r\n  minHeight: '100% !important',\r\n  '& .card': {\r\n      maxWidth: 800,\r\n      borderRadius: 12,\r\n      margin: '1rem',\r\n  },\r\n}))\r\n\r\n// inital login credentials\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, 'Password must be 6 character length')\r\n    .required('Password is required!'),\r\n  email: Yup.string().email('Invalid Email address').required('Email is required!'),\r\n});\r\n\r\nconst JwtLogin = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { login } = useAuth();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await login(values.email, values.password);\r\n      setLoading(false);\r\n      navigate('/')\r\n\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <JWTRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={6} xs={12}>\r\n            <JustifyBox p={4} height=\"100%\" sx={{ minWidth: 320 }}>\r\n              <img src=\"/assets/images/illustrations/dreamer.svg\" width=\"100%\" alt=\"\" />\r\n            </JustifyBox>\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <ContentBox>\r\n              <Formik\r\n                onSubmit={handleFormSubmit}\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(errors.email && touched.email)}\r\n                      required={true}\r\n                      sx={{ mb: 3 }}\r\n                    />\r\n\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      required={true}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    <FlexBox justifyContent=\"space-between\">\r\n                      {/* <FlexBox gap={1}>\r\n                        <Checkbox\r\n                          size=\"small\"\r\n                          name=\"remember\"\r\n                          onChange={handleChange}\r\n                          checked={values.remember}\r\n                          sx={{ padding: 0 }}\r\n                        />\r\n\r\n                        <Paragraph>Remember Me</Paragraph>\r\n                      </FlexBox> */}\r\n\r\n                      <NavLink\r\n                        to=\"/session/forgot-password\"\r\n                        style={{ color: theme.palette.primary.main }}\r\n                      >\r\n                        Forgot password?\r\n                      </NavLink>\r\n                    </FlexBox>\r\n\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      loading={loading}\r\n                      variant=\"contained\"\r\n                      sx={{ my: 2 }}\r\n                    >\r\n                      Login\r\n                    </LoadingButton>\r\n\r\n                    <Paragraph>\r\n                      Don't have an account?\r\n                      <NavLink\r\n                        to=\"/session/signup\"\r\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\r\n                      >\r\n                        Register\r\n                      </NavLink>\r\n                    </Paragraph>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </ContentBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </JWTRoot>\r\n  );\r\n};\r\n\r\nexport default JwtLogin;\r\n"],"sourceRoot":""}