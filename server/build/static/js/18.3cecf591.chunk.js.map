{"version":3,"sources":["app/views/teams/addEditTeam.jsx","app/views/teams/teamList.jsx","app/views/teams/teamView.js"],"names":["AddEditTeam","onClose","editDetails","React","useState","setValid","is_active","isActive","setIsActive","selectedDepartment","setSelectedDepartment","selectedProject","setSelectedProject","selectedAgents","setSelectedAgents","selectedLeads","setSelectedLeads","selectedUsers","setSelectedUsers","departments","setDepartments","projects","setProjects","users","setUsers","agents","setAgents","navigate","useNavigate","HeaderTitle","styled","div","FormContainer","props","divide","useEffect","getMasterDropdownData","then","resp","status","Swal","fire","icon","title","text","error","showCloseButton","showConfirmButton","width","data","department_id","project_id","leads","initialValues","teamName","name","handleCheckBoxChange","event","target","checked","handleDepartmentChange","value","handleProjectChange","handleUserChange","split","handleLeadChange","handleAgentsChange","Card","elevation","sx","pt","mb","minHeight","id","onClick","Icon","color","fontSize","cursor","Divider","onSubmit","values","reqBody","departmentId","projectId","active","createTeam","Strings","UPDATED_SUCCESSFULLY","CREATED_SUCCESSFULLY","handleChange","errors","touched","handleBlur","handleSubmit","Grid","container","spacing","item","lg","md","sm","xs","TextField","fullWidth","size","required","type","label","variant","onBlur","onChange","FormControl","InputLabel","Select","labelId","defaultValue","map","d","i","MenuItem","multiple","first_name","last_name","FormControlLabel","control","Checkbox","disabled","className","LoadingButton","my","top","marginRight","marginTop","TeamsTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","height","borderRadius","boxShadow","borderBottom","justifyContent","alignItems","flex","margin","TeamsList","onEditClick","onCreateClick","setCurrentView","setData","page","setPage","totalRecords","setTotalRecords","rowsPerPage","handleChangePage","_","newPage","fetchTeamsList","getAllTeams","response","pagingData","Object","assign","sno","totalItems","Box","overflow","Fab","rowData","columns","field","e","createdBy","modifiedBy","createdAt","moment","format","DATE_FORMAT","modifiedAt","updatedAt","actions","tooltip","options","actionsColumnIndex","emptyRowsWhenPaging","showTitle","search","toolbar","pageSizeOptions","pageSize","tableLayout","maxBodyHeight","headerStyle","backgroundColor","fontWeight","components","Pagination","TablePagination","count","onPageChange","labelDisplayedRows","ContentBox","theme","breakpoints","down","palette","secondary","marginBottom","TeamView","currentView","useSearchParams","query","setEditDetails","get","getTeamById"],"mappings":"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","file":"static/js/18.3cecf591.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment'\r\nimport { Formik } from 'formik';\r\nimport './teamList.css'\r\nimport { Card, Checkbox, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport styled from '@emotion/styled'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Strings } from 'config/strings'\r\nimport { createTeam, getMasterDropdownData } from 'app/services/adminService';\r\n\r\nconst AddEditTeam = ({ onClose, editDetails }) => {\r\n  const [valid, setValid] = React.useState(false)\r\n  const [isActive, setIsActive] = React.useState(editDetails?.is_active ? editDetails.is_active : true);\r\n  const [teamName, setTeamName] = React.useState();\r\n  const [selectedDepartment, setSelectedDepartment] = React.useState();\r\n  const [selectedProject, setSelectedProject] = React.useState();\r\n  const [selectedAgents, setSelectedAgents] = React.useState([]);\r\n  const [selectedLeads, setSelectedLeads] = React.useState([]);\r\n  const [selectedUsers, setSelectedUsers] = React.useState([]);\r\n  const [departments, setDepartments] = React.useState();\r\n  const [projects, setProjects] = React.useState();\r\n  const [users, setUsers] = React.useState();\r\n  const [agents, setAgents] = React.useState();\r\n  const handleClose = (event) => !!onClose && onClose(event) && setValid(false)\r\n  const navigate = useNavigate();\r\n\r\n  const HeaderTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    font-size: 1.5rem;\r\n`\r\n  const FormContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${(props) => (props.divide ? '50% 48.4%' : '100%')};\r\n    padding: 1rem 1rem 0 1rem;\r\n    gap: 1rem;\r\n`\r\n  const MyErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 13px;\r\n`\r\n\r\n  React.useEffect(() => {\r\n    if (editDetails) {\r\n      {\r\n        setIsActive(editDetails?.is_active);\r\n      }\r\n    }\r\n    getMasterDropdownData().then((resp) => {\r\n      if (resp?.status === false) {\r\n        return Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: resp.error,\r\n          showCloseButton: true,\r\n          showConfirmButton: false,\r\n          width: 400,\r\n        })\r\n      } else {\r\n        setDepartments(resp?.data?.departments);\r\n        setProjects(resp?.data?.projects);\r\n        setUsers(resp?.data?.users);\r\n        setAgents(resp?.data?.agents);\r\n        setSelectedDepartment(editDetails?.department_id);\r\n        setSelectedProject(editDetails?.project_id);\r\n        setSelectedAgents(editDetails?.agents?editDetails.agents:[]);\r\n        setSelectedUsers(editDetails?.users?editDetails.users:[]);\r\n        setSelectedLeads(editDetails?.leads?editDetails.leads:[]);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const onSubmit = (values) => {\r\n    const reqBody = {\r\n      teamName: values.teamName,\r\n      departmentId: selectedDepartment,\r\n      projectId: selectedProject,\r\n      users: selectedUsers,\r\n      leads: selectedLeads,\r\n      active: isActive,\r\n      agents: selectedAgents\r\n    };\r\n    if (editDetails?.id) {\r\n      reqBody.id = editDetails.id\r\n    }\r\n    createTeam(reqBody).then((resp) => {\r\n        if (resp?.status === false) {\r\n            return Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: resp.error,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: editDetails?.id ? Strings.UPDATED_SUCCESSFULLY : Strings.CREATED_SUCCESSFULLY,\r\n                showCloseButton: true,\r\n                showConfirmButton: false,\r\n                width: 400,\r\n            })\r\n            return navigate('/teams');\r\n        }\r\n\r\n    })\r\n  }\r\n  const initialValues = {\r\n    teamName: editDetails?.name? editDetails.name:''\r\n  }\r\n  const handleCheckBoxChange = (event) => {\r\n    if (event?.target.checked) {\r\n      setIsActive(false);\r\n    } else {\r\n      setIsActive(true);\r\n    }\r\n  }\r\n  const handleDepartmentChange = (event) => {\r\n    setSelectedDepartment(event.target.value);\r\n  }\r\n  const handleProjectChange = (event) => {\r\n    setSelectedProject(event.target.value);\r\n  }\r\n  const handleUserChange= (event)=>{\r\n    const {target: { value },} = event;\r\n    setSelectedUsers(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  }\r\n  const handleLeadChange= (event)=>{\r\n    const {target: { value },} = event;\r\n    setSelectedLeads(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  }\r\n  const handleAgentsChange= (event)=>{\r\n    const {target: { value },} = event;\r\n      setSelectedAgents(\r\n        // On autofill we get a stringified value.\r\n        typeof value === 'string' ? value.split(',') : value,\r\n      );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Card elevation={3} sx={{ pt: 0, mb: 0, minHeight: '50vh' }}>\r\n          <HeaderTitle>\r\n            <div>\r\n              {editDetails?.id ? 'Edit Team' : 'Add Team'}\r\n            </div>\r\n            <div onClick={handleClose}>\r\n              <Icon\r\n                sx={{\r\n                  color: '#59B691',\r\n                  fontSize: '35px !important',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                cancelsharp\r\n              </Icon>\r\n            </div>\r\n          </HeaderTitle>\r\n          <Divider />\r\n          <Formik onSubmit={onSubmit} initialValues={initialValues}>\r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <FormContainer>\r\n                  <Grid container spacing={2}>\r\n                  <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <TextField fullWidth size=\"large\" required={true} name=\"teamName\" type=\"text\" label=\"Team Name\"\r\n                        variant=\"outlined\" onBlur={handleBlur} value={values.teamName}\r\n                        onChange={handleChange} sx={{ mb: 1.5 }} />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"department\">Department</InputLabel>\r\n                        <Select\r\n                          labelId=\"department\"\r\n                          id=\"department\"\r\n                          required={true}\r\n                          value={selectedDepartment}\r\n                          label=\"Department\"\r\n                          onChange={handleDepartmentChange}\r\n                          defaultValue={selectedDepartment}\r\n                        >\r\n                          {\r\n                            departments?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"project\">Project</InputLabel>\r\n                        <Select\r\n                          labelId=\"project\"\r\n                          id=\"project\"\r\n                          required={true}\r\n                          value={selectedProject}\r\n                          label=\"Project\"\r\n                          onChange={handleProjectChange}\r\n                          defaultValue={selectedProject}\r\n                        >\r\n                          {\r\n                            projects?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"user\">Users</InputLabel>\r\n                        <Select\r\n                          labelId=\"user\"\r\n                          id=\"user\"\r\n                          multiple\r\n                          value={selectedUsers}\r\n                          label=\"Users\"\r\n                          onChange={handleUserChange}\r\n                          defaultValue={selectedUsers}\r\n                        >\r\n                          {\r\n                            users?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"leadId\">Team Lead</InputLabel>\r\n                        <Select\r\n                          labelId=\"teamLead\"\r\n                          id=\"teamLead\"\r\n                          required={true}\r\n                          multiple\r\n                          value={selectedLeads}\r\n                          label=\"Team Lead\"\r\n                          onChange={handleLeadChange}\r\n                          defaultValue={selectedLeads}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel required={true} id=\"agent\">Agents</InputLabel>\r\n                        <Select\r\n                          labelId=\"agents\"\r\n                          id=\"agents\"\r\n                          multiple\r\n                          required={true}\r\n                          value={selectedAgents}\r\n                          label=\"Agents\"\r\n                          onChange={handleAgentsChange}\r\n                          defaultValue={selectedAgents}\r\n                        >\r\n                          {\r\n                            agents?.map((d, i) => {\r\n                              return <MenuItem key={i} value={d.id}>{d.first_name} {d.last_name}</MenuItem>\r\n                            })\r\n                          }\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                      <FormControlLabel control={<Checkbox />}\r\n                        disabled={!editDetails?.id}\r\n                        checked={!isActive}\r\n                        onChange={handleCheckBoxChange}\r\n                        label=\"Inactive\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </FormContainer>\r\n                <div className='d-flex justify-content-end'>\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ my: 2, top: \"50\", marginRight: \"10px\", marginTop: \"15vh\" }}\r\n                  >\r\n                    Submit\r\n                  </LoadingButton>\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n          </Formik>\r\n        </Card>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddEditTeam\r\n","import {\r\n    Box,\r\n    Fab,\r\n    Icon,\r\n    styled,\r\n    Table,\r\n    TablePagination,\r\n  } from \"@mui/material\";\r\n  import MaterialTable from \"material-table\";\r\n  import \"./teamList.css\";\r\n  import { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { Strings } from \"config/strings\";\r\nimport { getAllTeams } from \"app/services/adminService\";\r\n  \r\n  const StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }));\r\n  const TeamsTable = styled(Table)(() => ({\r\n    marginTop: '20px',\r\n    whiteSpace: 'pre',\r\n    '& small': {\r\n        height: 15,\r\n        width: 50,\r\n        borderRadius: 500,\r\n        boxShadow:\r\n            '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n    },\r\n    '& td': {\r\n        borderBottom: 'none',\r\n    },\r\n    '& td:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& th:first-of-type': {\r\n        paddingLeft: '16px !important',\r\n    },\r\n    '& tfoot tr td div:nth-child(1)': {\r\n        justifyContent: 'center',\r\n        alignItems:'center',\r\n        flex: 'initial',\r\n        margin: '0.5rem 0',\r\n    },\r\n  }))\r\n  \r\n  const TeamsList = ({ onEditClick, onCreateClick, setCurrentView }) => {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [totalRecords, setTotalRecords] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  \r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    useEffect(() => {\r\n        fetchTeamsList()\r\n    }, [page])\r\n  \r\n    const fetchTeamsList = () => {\r\n        getAllTeams(page, rowsPerPage).then((response) => {\r\n            response?.data?.pagingData.map((data, i) => {\r\n                Object.assign(data, { sno: rowsPerPage * page + i + 1 })\r\n            })\r\n            setData(response?.data?.pagingData)\r\n            setTotalRecords(response.data.totalItems)\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <Box width=\"100%\" overflow=\"auto\">\r\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className=\"button addBtn\" onClick={(event, rowData) => {\r\n                onCreateClick && onCreateClick(rowData)\r\n            }}>\r\n                <Icon>add</Icon>\r\n            </Fab>\r\n            <TeamsTable>\r\n            <MaterialTable\r\n                        title=\"Teams\"\r\n                        columns={[\r\n                            { title: 'Team Name', field: 'name'},\r\n                            { title: 'Active', field: 'status'},\r\n                            { title: 'Created At ', field: 'createdAt'},\r\n                            { title: 'Modified At', field: 'modifiedAt'}\r\n                        ]}\r\n                        data={data.map((e) => {\r\n                            return {\r\n                                name: e.name,\r\n                                status: e.is_active,\r\n                                createdBy: e.name,\r\n                                modifiedBy: e.name,\r\n                                createdAt: moment(e.createdAt).format(Strings.DATE_FORMAT),\r\n                                modifiedAt: moment(e.updatedAt).format(Strings.DATE_FORMAT),\r\n                                id: e.id\r\n                            }\r\n                        })}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Edit User',\r\n                                onClick: (event, rowData) => {\r\n                                    onEditClick &&\r\n                                        onEditClick(rowData.id)\r\n                                },\r\n                            }\r\n                        ]}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          emptyRowsWhenPaging: false,\r\n                          showTitle: false,\r\n                          search: false,\r\n                          toolbar: false,\r\n                          pageSizeOptions: [],\r\n                          pageSize: rowsPerPage,\r\n                          tableLayout: 'auto',\r\n                          maxBodyHeight:\"400px\",\r\n                          headerStyle: {\r\n                              fontSize: '14px',\r\n                              backgroundColor: '#222A45',\r\n                              color:'white',\r\n                              fontWeight: '700',\r\n                          },\r\n  \r\n  \r\n  \r\n                        }}\r\n                        components={{\r\n                            Pagination: (props) => (\r\n                                <TablePagination\r\n                                    {...props}\r\n                                    count={totalRecords}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    onPageChange={handleChangePage}\r\n                                    labelDisplayedRows={() => ''}\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n            </TeamsTable>\r\n  \r\n  \r\n        </Box>\r\n    );\r\n  };\r\n  \r\n  export default TeamsList;\r\n  ","import { styled } from \"@mui/system\"\r\nimport { getTeamById } from \"app/services/adminService\";\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport AddEditTeam from \"./addEditTeam\";\r\nimport TeamsList from \"./teamList\";\r\n\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n    margin: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '16px',\r\n    },\r\n}))\r\n\r\nconst Title = styled('span')(() => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst H4 = styled('h4')(({ theme }) => ({\r\n    fontSize: '1rem',\r\n    fontWeight: '500',\r\n    marginBottom: '16px',\r\n    textTransform: 'capitalize',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst TeamView = () => {\r\n    const [currentView, setCurrentView] = useState('Teams');\r\n    const navigate = useNavigate()\r\n    const [query] = useSearchParams()\r\n    const [editDetails, setEditDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        if (query.get('type') === 'create-team') {\r\n            setCurrentView('Create')\r\n        } else if (query?.get('type')?.split('/')[0] === 'edit-team') {\r\n            onEditClick(query.get('type').split('/')[1])\r\n        } else {\r\n            setCurrentView('Teams')\r\n            setEditDetails();\r\n        }\r\n    }, [query])\r\n\r\n    const onEditClick = (id) => {\r\n        getTeamById({id:id}).then((response) => {\r\n            setEditDetails(response.data)\r\n        })\r\n        setCurrentView('Edit')\r\n        navigate({\r\n            search: `?type=edit-team/${id}`,\r\n        })\r\n    }\r\n    const onCreateClick = () => {\r\n        setCurrentView('Create')\r\n        navigate({\r\n            search: `?type=create-team`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContentBox>\r\n            {currentView === 'Teams' && (\r\n                    <TeamsList\r\n                        onEditClick={onEditClick}\r\n                        onCreateClick={onCreateClick}\r\n                        setEditDetails={setEditDetails}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                )}\r\n                {currentView === 'Create' && (\r\n                    <AddEditTeam\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n                {currentView === 'Edit' && editDetails && (\r\n                    <AddEditTeam\r\n                        onClose={() => {\r\n                            setCurrentView('List')\r\n                            navigate({\r\n                                search: '',\r\n                            })\r\n                            setEditDetails()\r\n                        }}\r\n                        editDetails={editDetails}\r\n                    />\r\n                )}\r\n            </ContentBox>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TeamView"],"sourceRoot":""}